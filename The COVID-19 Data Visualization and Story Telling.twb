<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xml:base='https://prod-uk-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Tableau_Final_Project' path='' revision='1.0' site='alexmpsanttableau' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' inline='true' name='federated.133tvty0vi8ja41fbt02j06waj94' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Group_A_covid-data_Portugal' name='excel-direct.19c4uzm16rg02p19kpqb60g7iw97'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alexm/Desktop/Analytics Academy Course/Final Project/Analytics Academy Project_July2022/Excel/Group_A_covid-data_Portugal.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.19c4uzm16rg02p19kpqb60g7iw97' name='Group_A_covid-data_Portugal' table='[&apos;Group_A_covid-data_Portugal$&apos;]' type='table'>
          <columns gridOrigin='A1:AZ736:no:A1:AZ736:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='icu_patients' ordinal='12' />
            <column datatype='real' name='icu_patients_per_million' ordinal='13' />
            <column datatype='integer' name='hosp_patients' ordinal='14' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
            <column datatype='integer' name='total_tests' ordinal='16' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='17' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='18' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='19' />
            <column datatype='real' name='positive_rate' ordinal='20' />
            <column datatype='real' name='tests_per_case' ordinal='21' />
            <column datatype='integer' name='total_vaccinations' ordinal='22' />
            <column datatype='integer' name='people_vaccinated' ordinal='23' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='24' />
            <column datatype='integer' name='total_boosters' ordinal='25' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='26' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='27' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='28' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='29' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='30' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='31' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='32' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='integer' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='41' />
            <column datatype='real' name='diabetes_prevalence' ordinal='42' />
            <column datatype='real' name='female_smokers' ordinal='43' />
            <column datatype='integer' name='male_smokers' ordinal='44' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='45' />
            <column datatype='real' name='life_expectancy' ordinal='46' />
            <column datatype='real' name='human_development_index' ordinal='47' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='48' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='49' />
            <column datatype='real' name='excess_mortality' ordinal='50' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.19c4uzm16rg02p19kpqb60g7iw97' name='Group_A_covid-data_Portugal' table='[&apos;Group_A_covid-data_Portugal$&apos;]' type='table'>
          <columns gridOrigin='A1:AZ736:no:A1:AZ736:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='icu_patients' ordinal='12' />
            <column datatype='real' name='icu_patients_per_million' ordinal='13' />
            <column datatype='integer' name='hosp_patients' ordinal='14' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
            <column datatype='integer' name='total_tests' ordinal='16' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='17' />
            <column datatype='integer' name='new_tests_smoothed' ordinal='18' />
            <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='19' />
            <column datatype='real' name='positive_rate' ordinal='20' />
            <column datatype='real' name='tests_per_case' ordinal='21' />
            <column datatype='integer' name='total_vaccinations' ordinal='22' />
            <column datatype='integer' name='people_vaccinated' ordinal='23' />
            <column datatype='integer' name='people_fully_vaccinated' ordinal='24' />
            <column datatype='integer' name='total_boosters' ordinal='25' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='26' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='27' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='28' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='29' />
            <column datatype='real' name='total_boosters_per_hundred' ordinal='30' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='31' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='32' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='33' />
            <column datatype='real' name='stringency_index' ordinal='34' />
            <column datatype='integer' name='population' ordinal='35' />
            <column datatype='real' name='population_density' ordinal='36' />
            <column datatype='real' name='median_age' ordinal='37' />
            <column datatype='real' name='aged_65_older' ordinal='38' />
            <column datatype='real' name='aged_70_older' ordinal='39' />
            <column datatype='real' name='gdp_per_capita' ordinal='40' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='41' />
            <column datatype='real' name='diabetes_prevalence' ordinal='42' />
            <column datatype='real' name='female_smokers' ordinal='43' />
            <column datatype='integer' name='male_smokers' ordinal='44' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='45' />
            <column datatype='real' name='life_expectancy' ordinal='46' />
            <column datatype='real' name='human_development_index' ordinal='47' />
            <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='48' />
            <column datatype='real' name='excess_mortality_cumulative' ordinal='49' />
            <column datatype='real' name='excess_mortality' ordinal='50' />
            <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='51' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AZ736:no:A1:AZ736:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Portugal]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Group_A_covid-data_Portugal' datatype='table' name='[__tableau_internal_object_id__].[Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='real' name='[excess_mortality]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative' datatype='real' name='[excess_mortality_cumulative]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='real' name='[excess_mortality_cumulative_absolute]' role='measure' type='quantitative' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='real' name='[excess_mortality_cumulative_per_million]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='integer' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='integer' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed' datatype='integer' name='[new_tests_smoothed]' role='measure' type='quantitative' />
      <column caption='New Tests Smoothed Per Thousand' datatype='real' name='[new_tests_smoothed_per_thousand]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='integer' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Total Boosters' datatype='integer' name='[total_boosters]' role='measure' type='quantitative' />
      <column caption='Total Boosters Per Hundred' datatype='real' name='[total_boosters_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per Thousand' datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations' datatype='integer' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column-instance column='[hosp_patients]' derivation='Max' name='[max:hosp_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='Max' name='[max:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations_smoothed]' derivation='Max' name='[max:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_rate]' derivation='Max' name='[max:positive_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_cases_smoothed]' derivation='None' name='[none:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='None' name='[none:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[excess_mortality]' derivation='Sum' name='[sum:excess_mortality:qk]' pivot='key' type='quantitative' />
      <column-instance column='[excess_mortality_cumulative_absolute]' derivation='Sum' name='[sum:excess_mortality_cumulative_absolute:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gdp_per_capita]' derivation='Sum' name='[sum:gdp_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hosp_patients]' derivation='Sum' name='[sum:hosp_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hosp_patients_per_million]' derivation='Sum' name='[sum:hosp_patients_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[human_development_index]' derivation='Sum' name='[sum:human_development_index:qk]' pivot='key' type='quantitative' />
      <column-instance column='[icu_patients]' derivation='Sum' name='[sum:icu_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[male_smokers]' derivation='Sum' name='[sum:male_smokers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_age]' derivation='Sum' name='[sum:median_age:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Sum' name='[sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='Sum' name='[sum:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Sum' name='[sum:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_smoothed]' derivation='Sum' name='[sum:new_tests_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests_smoothed_per_thousand]' derivation='Sum' name='[sum:new_tests_smoothed_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations_smoothed]' derivation='Sum' name='[sum:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_vaccinated]' derivation='Sum' name='[sum:people_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[positive_rate]' derivation='Sum' name='[sum:positive_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[reproduction_rate]' derivation='Sum' name='[sum:reproduction_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[tests_per_case]' derivation='Sum' name='[sum:tests_per_case:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed]' derivation='Sum' name='[win:sum:new_deaths_smoothed:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[new_vaccinations_smoothed]' derivation='Sum' name='[win:sum:new_vaccinations_smoothed:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:median_age:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_tests_smoothed_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_tests_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_vaccinations_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:people_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:positive_rate:qk]&quot;</bucket>
            </map>
            <map to='#146c36'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:total_deaths:qk]&quot;</bucket>
            </map>
            <map to='#34844a'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:icu_patients:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[none:new_deaths_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[win:sum:new_deaths_smoothed:qk:1]&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:male_smokers:qk]&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_deaths_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#8175aa'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_deaths_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[win:sum:new_vaccinations_smoothed:qk:1]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:hosp_patients:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[none:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:excess_mortality_cumulative_absolute:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:excess_mortality:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:gdp_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:hosp_patients_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:hosp_patients:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:human_development_index:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:reproduction_rate:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:tests_per_case:qk]&quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:total_cases:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;US Minor Outlying Islands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Group_A_covid-data_Portugal' id='Group!A!covid-data!Portugal_04971CE0C4EB4092B697B32714E6A0C0'>
            <properties context=''>
              <relation connection='excel-direct.19c4uzm16rg02p19kpqb60g7iw97' name='Group_A_covid-data_Portugal' table='[&apos;Group_A_covid-data_Portugal$&apos;]' type='table'>
                <columns gridOrigin='A1:AZ736:no:A1:AZ736:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='total_cases' ordinal='3' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='4' />
                  <column datatype='integer' name='total_deaths' ordinal='5' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
                  <column datatype='real' name='total_cases_per_million' ordinal='7' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
                  <column datatype='real' name='reproduction_rate' ordinal='11' />
                  <column datatype='integer' name='icu_patients' ordinal='12' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='13' />
                  <column datatype='integer' name='hosp_patients' ordinal='14' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
                  <column datatype='integer' name='total_tests' ordinal='16' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='17' />
                  <column datatype='integer' name='new_tests_smoothed' ordinal='18' />
                  <column datatype='real' name='new_tests_smoothed_per_thousand' ordinal='19' />
                  <column datatype='real' name='positive_rate' ordinal='20' />
                  <column datatype='real' name='tests_per_case' ordinal='21' />
                  <column datatype='integer' name='total_vaccinations' ordinal='22' />
                  <column datatype='integer' name='people_vaccinated' ordinal='23' />
                  <column datatype='integer' name='people_fully_vaccinated' ordinal='24' />
                  <column datatype='integer' name='total_boosters' ordinal='25' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='26' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='27' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='28' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='29' />
                  <column datatype='real' name='total_boosters_per_hundred' ordinal='30' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='31' />
                  <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='32' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='33' />
                  <column datatype='real' name='stringency_index' ordinal='34' />
                  <column datatype='integer' name='population' ordinal='35' />
                  <column datatype='real' name='population_density' ordinal='36' />
                  <column datatype='real' name='median_age' ordinal='37' />
                  <column datatype='real' name='aged_65_older' ordinal='38' />
                  <column datatype='real' name='aged_70_older' ordinal='39' />
                  <column datatype='real' name='gdp_per_capita' ordinal='40' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='41' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='42' />
                  <column datatype='real' name='female_smokers' ordinal='43' />
                  <column datatype='integer' name='male_smokers' ordinal='44' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='45' />
                  <column datatype='real' name='life_expectancy' ordinal='46' />
                  <column datatype='real' name='human_development_index' ordinal='47' />
                  <column datatype='real' name='excess_mortality_cumulative_absolute' ordinal='48' />
                  <column datatype='real' name='excess_mortality_cumulative' ordinal='49' />
                  <column datatype='real' name='excess_mortality' ordinal='50' />
                  <column datatype='real' name='excess_mortality_cumulative_per_million' ordinal='51' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' inline='true' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Group_A_covid-data_World' name='excel-direct.0pvtlua0lf3brm15boxf21jf3fwc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alexm/Desktop/Analytics Academy Course/Final Project/Analytics Academy Project_July2022/Excel/Group_A_covid-data_World.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0pvtlua0lf3brm15boxf21jf3fwc' name='Group_A_covid-data_World' table='[&apos;Group_A_covid-data_World$&apos;]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='real' name='total_cases_per_million' ordinal='5' />
            <column datatype='integer' name='total_deaths' ordinal='6' />
            <column datatype='real' name='total_deaths_per_million' ordinal='7' />
            <column datatype='real' name='gdp_per_capita' ordinal='8' />
            <column datatype='integer' name='population' ordinal='9' />
            <column datatype='real' name='population_density' ordinal='10' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='11' />
            <column datatype='real' name='life_expectancy' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0pvtlua0lf3brm15boxf21jf3fwc' name='Group_A_covid-data_World' table='[&apos;Group_A_covid-data_World$&apos;]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='real' name='total_cases_per_million' ordinal='5' />
            <column datatype='integer' name='total_deaths' ordinal='6' />
            <column datatype='real' name='total_deaths_per_million' ordinal='7' />
            <column datatype='real' name='gdp_per_capita' ordinal='8' />
            <column datatype='integer' name='population' ordinal='9' />
            <column datatype='real' name='population_density' ordinal='10' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='11' />
            <column datatype='real' name='life_expectancy' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Group_A_covid-data_World]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Group_A_covid-data_World' datatype='table' name='[__tableau_internal_object_id__].[Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' semantic-role='' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
        </semantic-values>
      </column>
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Attribute' name='[attr:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Avg' name='[cum:avg:total_cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[cum:max:total_cases:qk:1]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[continent]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[cum:max:total_cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[cum:max:total_cases:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[cum:max:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[date]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_deaths_per_million]' derivation='Max' name='[cum:max:total_deaths_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Min' name='[cum:min:total_cases_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[date]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[cum:sum:total_cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[date]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[cum:sum:total_cases:qk:3]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[cum:sum:total_cases:qk:5]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[continent]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[cum:sum:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[continent]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk:5]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[date]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[cum:sum:total_cases_per_million:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[total_cases]' derivation='Avg' name='[win:avg:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[win:sum:total_cases:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='CellInPane' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[win:sum:total_cases:qk:4]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[continent]' ordering-type='Field' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <column-instance column='[total_cases]' derivation='Sum' name='[win:sum:total_cases:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <group caption='Action (Location)' hidden='true' name='[Action (Location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Continent,MONTH(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:continent:nk]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[attr:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:avg:total_cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_cases:qk:1]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_cases:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:min:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases_per_million:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases_per_million:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases_per_million:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases:qk:3]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases:qk:5]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[win:avg:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[win:sum:total_cases:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[win:sum:total_cases:qk:4]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[win:sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[sum:total_cases_per_million:qk]:1&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1m2bf920iz3vwn1am5vg11h8e57w].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' palette='brown_10_0' type='palette'>
            <map to='#9f3632'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#b85536'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#c7784c'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#dc9856'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e9b97a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#eedbbd'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Group_A_covid-data_World' id='Group!A!covid-data!World_46DDA9A323834C37822582EF0D0C9E41'>
            <properties context=''>
              <relation connection='excel-direct.0pvtlua0lf3brm15boxf21jf3fwc' name='Group_A_covid-data_World' table='[&apos;Group_A_covid-data_World$&apos;]' type='table'>
                <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='real' name='total_cases_per_million' ordinal='5' />
                  <column datatype='integer' name='total_deaths' ordinal='6' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='7' />
                  <column datatype='real' name='gdp_per_capita' ordinal='8' />
                  <column datatype='integer' name='population' ordinal='9' />
                  <column datatype='real' name='population_density' ordinal='10' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='11' />
                  <column datatype='real' name='life_expectancy' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Group_A_covid-data_Europe (Group_A_covid-data_Europe)' inline='true' name='federated.1xzlpxw1055pqb170ee2c09m11sg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Group_A_covid-data_Europe' name='excel-direct.1oqyezf132s5lm1cp3rih06htq0c'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/alexm/Desktop/Analytics Academy Course/Final Project/Analytics Academy Project_July2022/Excel/Group_A_covid-data_Europe.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1oqyezf132s5lm1cp3rih06htq0c' name='Group_A_covid-data_Europe' table='[&apos;Group_A_covid-data_Europe$&apos;]' type='table'>
          <columns gridOrigin='A1:AH10001:no:A1:AH10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='icu_patients' ordinal='12' />
            <column datatype='real' name='icu_patients_per_million' ordinal='13' />
            <column datatype='integer' name='hosp_patients' ordinal='14' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
            <column datatype='real' name='tests_per_case' ordinal='16' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='17' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='18' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='19' />
            <column datatype='real' name='stringency_index' ordinal='20' />
            <column datatype='integer' name='population' ordinal='21' />
            <column datatype='real' name='population_density' ordinal='22' />
            <column datatype='real' name='median_age' ordinal='23' />
            <column datatype='real' name='aged_65_older' ordinal='24' />
            <column datatype='real' name='aged_70_older' ordinal='25' />
            <column datatype='real' name='gdp_per_capita' ordinal='26' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='27' />
            <column datatype='real' name='diabetes_prevalence' ordinal='28' />
            <column datatype='real' name='female_smokers' ordinal='29' />
            <column datatype='real' name='male_smokers' ordinal='30' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
            <column datatype='real' name='life_expectancy' ordinal='32' />
            <column datatype='real' name='human_development_index' ordinal='33' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1oqyezf132s5lm1cp3rih06htq0c' name='Group_A_covid-data_Europe' table='[&apos;Group_A_covid-data_Europe$&apos;]' type='table'>
          <columns gridOrigin='A1:AH10001:no:A1:AH10001:0' header='yes' outcome='6'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='total_cases' ordinal='3' />
            <column datatype='real' name='new_cases_smoothed' ordinal='4' />
            <column datatype='integer' name='total_deaths' ordinal='5' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
            <column datatype='real' name='total_cases_per_million' ordinal='7' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
            <column datatype='real' name='total_deaths_per_million' ordinal='9' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
            <column datatype='real' name='reproduction_rate' ordinal='11' />
            <column datatype='integer' name='icu_patients' ordinal='12' />
            <column datatype='real' name='icu_patients_per_million' ordinal='13' />
            <column datatype='integer' name='hosp_patients' ordinal='14' />
            <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
            <column datatype='real' name='tests_per_case' ordinal='16' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='17' />
            <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='18' />
            <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='19' />
            <column datatype='real' name='stringency_index' ordinal='20' />
            <column datatype='integer' name='population' ordinal='21' />
            <column datatype='real' name='population_density' ordinal='22' />
            <column datatype='real' name='median_age' ordinal='23' />
            <column datatype='real' name='aged_65_older' ordinal='24' />
            <column datatype='real' name='aged_70_older' ordinal='25' />
            <column datatype='real' name='gdp_per_capita' ordinal='26' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='27' />
            <column datatype='real' name='diabetes_prevalence' ordinal='28' />
            <column datatype='real' name='female_smokers' ordinal='29' />
            <column datatype='real' name='male_smokers' ordinal='30' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
            <column datatype='real' name='life_expectancy' ordinal='32' />
            <column datatype='real' name='human_development_index' ordinal='33' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AH10001:no:A1:AH10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>5</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_people_vaccinated_smoothed]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_people_vaccinated_smoothed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_people_vaccinated_smoothed_per_hundred]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>new_people_vaccinated_smoothed_per_hundred</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>5</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[Group_A_covid-data_Europe]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Group_A_covid-data_Europe' datatype='table' name='[__tableau_internal_object_id__].[Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Female Smokers' datatype='real' name='[female_smokers]' role='measure' type='quantitative' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Per Million' datatype='real' name='[hosp_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='integer' name='[icu_patients]' role='measure' type='quantitative' />
      <column caption='Icu Patients Per Million' datatype='real' name='[icu_patients_per_million]' role='measure' type='quantitative' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='real' name='[male_smokers]' role='measure' type='quantitative' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed' datatype='integer' name='[new_people_vaccinated_smoothed]' role='measure' type='quantitative' />
      <column caption='New People Vaccinated Smoothed Per Hundred' datatype='real' name='[new_people_vaccinated_smoothed_per_hundred]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='real' name='[tests_per_case]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Attribute' name='[attr:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[avg:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Avg' name='[avg:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Avg' name='[avg:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Count' name='[cnt:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='CountD' name='[ctd:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[cum:avg:hospital_beds_per_thousand:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1xzlpxw1055pqb170ee2c09m11sg].[location]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[hospital_beds_per_thousand]' derivation='Avg' name='[cum:avg:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[cum:sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-field='[federated.1xzlpxw1055pqb170ee2c09m11sg].[location]' ordering-type='Field' type='CumTotal' />
      </column-instance>
      <column-instance column='[population_density]' derivation='Sum' name='[cum:sum:population_density:qk:2]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='CellInPane' type='CumTotal' />
      </column-instance>
      <column-instance column='[population_density]' derivation='Sum' name='[cum:sum:population_density:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='Max' name='[max:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Max' name='[max:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Median' name='[med:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='None' name='[none:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='None' name='[none:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='None' name='[none:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='None' name='[none:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Sum' name='[rank:sum:population_density:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[hosp_patients_per_million]' derivation='Sum' name='[sum:hosp_patients_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Sum' name='[sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed_per_million]' derivation='Sum' name='[sum:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_deaths_smoothed_per_million]' derivation='Sum' name='[sum:new_deaths_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population_density]' derivation='Sum' name='[sum:population_density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_cases_smoothed]' derivation='Max' name='[win:max:new_cases_smoothed:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='green_orange_cyan_yellow_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[ctd:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:total_cases:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[avg:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:avg:hospital_beds_per_thousand:qk:2]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:avg:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:hosp_patients_per_million:qk]&quot;</bucket>
            </map>
            <map to='#4e9f50'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:new_cases_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#87d180'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[win:max:new_cases_smoothed:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[attr:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[avg:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[avg:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cnt:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:sum:population_density:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[cum:sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[med:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[rank:sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:new_deaths_smoothed_per_million:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:population_density:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1xzlpxw1055pqb170ee2c09m11sg].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;US Minor Outlying Islands&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
        <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
        <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Group_A_covid-data_Europe' id='Group!A!covid-data!Europe_FF73754E150A44259156F4C04D4DFC86'>
            <properties context=''>
              <relation connection='excel-direct.1oqyezf132s5lm1cp3rih06htq0c' name='Group_A_covid-data_Europe' table='[&apos;Group_A_covid-data_Europe$&apos;]' type='table'>
                <columns gridOrigin='A1:AH10001:no:A1:AH10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='total_cases' ordinal='3' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='4' />
                  <column datatype='integer' name='total_deaths' ordinal='5' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='6' />
                  <column datatype='real' name='total_cases_per_million' ordinal='7' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='8' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='9' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='10' />
                  <column datatype='real' name='reproduction_rate' ordinal='11' />
                  <column datatype='integer' name='icu_patients' ordinal='12' />
                  <column datatype='real' name='icu_patients_per_million' ordinal='13' />
                  <column datatype='integer' name='hosp_patients' ordinal='14' />
                  <column datatype='real' name='hosp_patients_per_million' ordinal='15' />
                  <column datatype='real' name='tests_per_case' ordinal='16' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='17' />
                  <column datatype='integer' name='new_people_vaccinated_smoothed' ordinal='18' />
                  <column datatype='real' name='new_people_vaccinated_smoothed_per_hundred' ordinal='19' />
                  <column datatype='real' name='stringency_index' ordinal='20' />
                  <column datatype='integer' name='population' ordinal='21' />
                  <column datatype='real' name='population_density' ordinal='22' />
                  <column datatype='real' name='median_age' ordinal='23' />
                  <column datatype='real' name='aged_65_older' ordinal='24' />
                  <column datatype='real' name='aged_70_older' ordinal='25' />
                  <column datatype='real' name='gdp_per_capita' ordinal='26' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='27' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='28' />
                  <column datatype='real' name='female_smokers' ordinal='29' />
                  <column datatype='real' name='male_smokers' ordinal='30' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='31' />
                  <column datatype='real' name='life_expectancy' ordinal='32' />
                  <column datatype='real' name='human_development_index' ordinal='33' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1_847A5C9FD94147A9A78D763164F1951C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cases vs Vacc(PT)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Vaccinations vs New Cases (Portugal)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_vaccinations_smoothed]' derivation='Max' name='[max:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' included-values='in-range' />
          <slices>
            <column>[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]</column>
            <column>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#f28e2b' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Omicron: &lt;Computation&gt;' label-type='custom' scope='per-table' tooltip-type='none' value='#2021-11-29 00:00:00#' value-column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' z-order='1' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_cases_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='134' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.133tvty0vi8ja41fbt02j06waj94].[max:new_cases_smoothed:qk] + [federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk])</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{B529C2D7-94D9-4563-8717-164B6DC36A2D}' />
    </worksheet>
    <worksheet name='Corr (EU)2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Corr. Population Density  vs Cases per Million (Europe EU)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Europe (Group_A_covid-data_Europe)' name='federated.1xzlpxw1055pqb170ee2c09m11sg' />
          </datasources>
          <datasource-dependencies datasource='federated.1xzlpxw1055pqb170ee2c09m11sg'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[new_cases_smoothed]' derivation='Max' name='[max:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population_density]' derivation='Max' name='[max:population_density:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Malta&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]' />
              <lod column='[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-color' value='#b6992d' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:population_density:qk]</rows>
        <cols>[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:new_cases_smoothed:qk]</cols>
      </table>
      <simple-id uuid='{528B4678-C754-468D-B4E5-CCB747A990D3}' />
    </worksheet>
    <worksheet name='Corr.(EU)1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Corr. Gdp Per Capita vs New Cases (Europe EU)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Europe (Group_A_covid-data_Europe)' name='federated.1xzlpxw1055pqb170ee2c09m11sg' />
          </datasources>
          <datasource-dependencies datasource='federated.1xzlpxw1055pqb170ee2c09m11sg'>
            <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[gdp_per_capita]' derivation='Max' name='[max:gdp_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_cases_smoothed_per_million]' derivation='Max' name='[max:new_cases_smoothed_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffaa00' />
                <format attr='size' value='1.1974033117294312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:new_cases_smoothed_per_million:qk]</rows>
        <cols>[federated.1xzlpxw1055pqb170ee2c09m11sg].[max:gdp_per_capita:qk]</cols>
      </table>
      <simple-id uuid='{43FA2A97-52F9-4853-8F5E-DAE7440776EB}' />
    </worksheet>
    <worksheet name='Deaths vs Vacc(PT)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New Vaccinations vs New Deaths (Portugal)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_deaths_smoothed]' derivation='Max' name='[max:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[new_vaccinations_smoothed]' derivation='Max' name='[max:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
            <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
            <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-color' id='refline0' value='#f28e2b' />
            <format attr='stroke-size' id='refline0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='Omicron: &lt;Value&gt;' label-type='custom' scope='per-table' value='#2021-11-29 00:00:00#' value-column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' z-order='1' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_deaths_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.133tvty0vi8ja41fbt02j06waj94].[max:new_deaths_smoothed:qk] + [federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk])</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{E5B4BBB1-8CE3-4FA8-B4F7-0332BEB0F4D6}' />
    </worksheet>
    <worksheet name='Forecast(PT1)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forecasting - New Cases (Portugal)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_cases_smoothed]' derivation='Sum' forecast-column-base='[sum:new_cases_smoothed:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases_smoothed]' derivation='Sum' name='[sum:new_cases_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]' included-values='in-range'>
            <min>#2020-03-01 00:00:00#</min>
            <max>#2022-03-05 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.133tvty0vi8ja41fbt02j06waj94].[tdy:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]' field-type='quantitative' major-origin='#2021-08-16 12:00:00#' major-spacing='1.0' major-units='years' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_cases_smoothed:qk]' field-type='quantitative' max='2080557.3826031249' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#ffaa00' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[none:Forecast Indicator:nk]' />
              <text column='[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_cases_smoothed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_cases_smoothed:qk]</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A6751637-2CED-4DFB-993D-F6C5380DBE7B}' />
    </worksheet>
    <worksheet name='Forecast(PT2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Forecasting - New Deaths (Portugal)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[new_deaths_smoothed]' derivation='Sum' forecast-column-base='[sum:new_deaths_smoothed:qk]' forecast-column-type='forecast-value' name='[fVal:sum:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
            <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths_smoothed]' derivation='Sum' name='[sum:new_deaths_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]' included-values='in-range' />
          <slices>
            <column>[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_deaths_smoothed:qk]' field-type='quantitative' max='5293.7142029812121' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_deaths_smoothed:qk]' />
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.133tvty0vi8ja41fbt02j06waj94].[fVal:sum:new_deaths_smoothed:qk]</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A06E0F33-FED7-4F01-A0C0-C9A953122440}' />
    </worksheet>
    <worksheet name='P.rate vs Patientes(EU)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Positive rate vs Hosp Patients (Europe EU)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_Portugal (Group_A_covid-data_Portugal)' name='federated.133tvty0vi8ja41fbt02j06waj94' />
          </datasources>
          <datasource-dependencies datasource='federated.133tvty0vi8ja41fbt02j06waj94'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Hosp Patients' datatype='integer' name='[hosp_patients]' role='measure' type='quantitative' />
            <column-instance column='[hosp_patients]' derivation='Max' name='[max:hosp_patients:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive_rate]' derivation='Max' name='[max:positive_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Positive Rate' datatype='real' name='[positive_rate]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:hosp_patients:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.133tvty0vi8ja41fbt02j06waj94].[max:hosp_patients:qk] + [federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk])</rows>
        <cols>[federated.133tvty0vi8ja41fbt02j06waj94].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{AC34D547-7E07-4193-AA65-6A66E48540C6}' />
    </worksheet>
    <worksheet name='Running Total Cases_W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Cases (per million) Growth -  Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' />
              <text column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:qk]</cols>
        <pages>
          <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-color='#f28e2b' mark-color-auto='false' mark-type='all' start='28' trail-effect='none' />
      </table>
      <simple-id uuid='{3F195300-9631-41A0-8BA9-9FCE9F4F6E2F}' />
    </worksheet>
    <worksheet name='Running Total Deaths_W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Deaths (per million) Growth -  Continents</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='' type='nominal' />
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[cum:max:total_deaths_per_million:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' />
              <text column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[cum:max:total_deaths_per_million:qk]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:qk]</cols>
        <pages>
          <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' lines='true' mark-color='#f28e2b' mark-color-auto='false' mark-type='all' start='28' trail-effect='none' />
      </table>
      <simple-id uuid='{CFA1DF34-5834-4F9B-AC0A-B6E92E8236D8}' />
    </worksheet>
    <worksheet name='Top10_cases(pm)_W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 countries (Cases per Million)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='None' name='[none:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_847A5C9FD94147A9A78D763164F1951C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]' included-values='in-range'>
            <min>382502.0</min>
            <max>496858.598</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</column>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{887200D6-66CB-4CFD-A76D-2DE96781E8B0}' />
    </worksheet>
    <worksheet name='Top10_deaths(pm)_W'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 countries (Deaths per Million)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths_per_million]' derivation='None' name='[none:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_847A5C9FD94147A9A78D763164F1951C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]' included-values='in-range'>
            <min>3412.0</min>
            <max>6322.2629999999999</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</column>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{17AE4706-88D8-452E-A1D7-41822FDC60DE}' />
    </worksheet>
    <worksheet name='Total_cases(pm)_W_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases per Million - Worldwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='None' name='[none:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_847A5C9FD94147A9A78D763164F1951C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]' included-values='all' />
          <slices>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</column>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]' field-type='quantitative' max='27168824.166140702' min='-12906192.51943779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]' field-type='quantitative' max='13797720.761938212' min='-9599369.3459553067' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]' />
              <color column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' />
              <geometry column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B58AE4AC-6674-43AC-843F-78528BC45DC8}' />
    </worksheet>
    <worksheet name='Total_deaths(pm)_W_map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Million - Wordwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Group_A_covid-data_World (Group_A_covid-data_World)' name='federated.1m2bf920iz3vwn1am5vg11h8e57w' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1m2bf920iz3vwn1am5vg11h8e57w'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_deaths_per_million]' derivation='Max' name='[max:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths_per_million]' derivation='None' name='[none:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1_847A5C9FD94147A9A78D763164F1951C]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]' included-values='all' />
          <slices>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</column>
            <column>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]' field-type='quantitative' max='27168824.166140702' min='-12906192.51943779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]' field-type='quantitative' max='15214635.149589092' min='-11016283.733606186' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' num-steps='5' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]' />
              <color column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' />
              <geometry column='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]</rows>
        <cols>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D55D7092-6DD1-4293-BECD-18488B691BCC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='5' type-v2='layout-basic' w='89702' x='468' y='885'>
              <zone h='49113' id='3' name='Running Total Cases_W' w='89702' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49117' id='10' name='Running Total Deaths_W' w='89702' x='468' y='49998'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98230' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='885'>
              <zone h='16150' id='8' name='Running Total Cases_W' pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' type-v2='color' w='9362' x='90170' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone count='1' h='12168' id='9' name='Running Total Cases_W' name1='Running Total Deaths_W' synchronized='1' type-v2='currpage' w='9362' x='90170' y='17035'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='76' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='75' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49113' id='3' is-fixed='true' name='Running Total Cases_W' w='89702' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16150' id='8' name='Running Total Cases_W' pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' type-v2='color' w='9362' x='90170' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49117' id='10' is-fixed='true' name='Running Total Deaths_W' w='89702' x='468' y='49998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone count='1' h='12168' id='9' name='Running Total Cases_W' name1='Running Total Deaths_W' synchronized='1' type-v2='currpage' w='9362' x='90170' y='17035'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DAFE8D49-FE1B-4937-9AD3-0782FB02316A}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='50' param='vert' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='16' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
              <zone h='98230' id='5' type-v2='layout-basic' w='99064' x='468' y='885'>
                <zone h='49110' id='3' name='Total_cases(pm)_W_map' w='49532' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49120' id='8' name='Total_deaths(pm)_W_map' w='49532' x='468' y='49995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49110' id='11' name='Top10_cases(pm)_W' w='49532' x='50000' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49120' id='14' name='Top10_deaths(pm)_W' w='49532' x='50000' y='49995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='90' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='89' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49110' id='3' is-fixed='true' name='Total_cases(pm)_W_map' w='49532' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49110' id='11' is-fixed='true' name='Top10_cases(pm)_W' w='49532' x='50000' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49120' id='8' is-fixed='true' name='Total_deaths(pm)_W_map' w='49532' x='468' y='49995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49120' id='14' is-fixed='true' name='Top10_deaths(pm)_W' w='49532' x='50000' y='49995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D515D7DC-3643-4626-A921-705E2BF2BA2E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='68' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='7' param='horz' type-v2='layout-flow' w='89234' x='468' y='885'>
              <zone h='98230' id='5' type-v2='layout-basic' w='89234' x='468' y='885'>
                <zone h='98230' id='3' name='P.rate vs Patientes(EU)' w='89234' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='168' h='98230' id='67' is-fixed='true' param='vert' type-v2='layout-flow' w='9830' x='89702' y='885'>
              <zone h='7301' id='69' name='P.rate vs Patientes(EU)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9830' x='89702' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='75' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='74' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='98230' id='3' is-fixed='true' name='P.rate vs Patientes(EU)' w='89234' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7301' id='69' name='P.rate vs Patientes(EU)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9830' x='89702' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8FF5DAE2-9106-4733-9434-FB0E04FA46B7}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='7' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='5' type-v2='layout-basic' w='99064' x='468' y='885'>
              <zone h='49115' id='9' name='Corr.(EU)1' w='99064' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='10' name='Corr (EU)2' w='99064' x='468' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='71' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49115' id='9' is-fixed='true' name='Corr.(EU)1' w='99064' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49115' id='10' is-fixed='true' name='Corr (EU)2' w='99064' x='468' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{854B6B76-0E78-48A9-A541-39EF93DE935E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='73' param='horz' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='5' type-v2='layout-basic' w='99064' x='468' y='885'>
              <zone h='49115' id='3' name='Cases vs Vacc(PT)' w='89702' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='9' name='Deaths vs Vacc(PT)' w='89702' x='468' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='75' name='Deaths vs Vacc(PT)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9362' x='90170' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='74' name='Cases vs Vacc(PT)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9362' x='90170' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='81' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='80' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49115' id='3' is-fixed='true' name='Cases vs Vacc(PT)' w='89702' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49115' id='74' name='Cases vs Vacc(PT)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9362' x='90170' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49115' id='9' is-fixed='true' name='Deaths vs Vacc(PT)' w='89702' x='468' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49115' id='75' name='Deaths vs Vacc(PT)' pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type-v2='color' w='9362' x='90170' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FB8A4822-83A7-4CAC-9807-F9981B29F4C4}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 6'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='17' param='horz' type-v2='layout-flow' w='99034' x='483' y='940'>
            <zone h='98120' id='5' type-v2='layout-basic' w='99034' x='483' y='940'>
              <zone h='49060' id='15' name='Forecast(PT1)' w='99034' x='483' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49060' id='19' name='Forecast(PT2)' w='99034' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='77' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='76' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49060' id='15' is-fixed='true' name='Forecast(PT1)' w='99034' x='483' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49060' id='19' is-fixed='true' name='Forecast(PT2)' w='99034' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3B384A8D-766D-4A4A-88BC-B166AC697E40}' />
    </dashboard>
    <dashboard name='Story' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>The COVID-19 Data Visualization and Story Telling</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='338' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='1' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='885'>
            <zone h='3650' id='3' type-v2='title' w='99064' x='468' y='885' />
            <zone fixed-size='90' h='9956' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99064' x='468' y='4535' />
            <zone h='84624' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99064' x='468' y='14491'>
              <flipboard active-id='8' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='- How have Covid cases and deaths evolved in the world and which continents have reached the highest numbers?' captured-sheet='Dashboard 1' id='2'>
                    <capturedDeltas>
                      <worksheet name='Running Total Cases_W'>
                        <current-page>
                          <multibucket>
                            <bucket>#2022-03-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                      <worksheet name='Running Total Deaths_W'>
                        <current-page>
                          <multibucket>
                            <bucket>#2022-03-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='- Which are the Top 10 countries with the most cases and most deaths per million inhabitants?' captured-sheet='Dashboard 2' id='1'>
                    <capturedDeltas>
                      <worksheet name='Total_cases(pm)_W_map'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Latitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Longitude (generated)]' field-type='quantitative' projection='EPSG:3857' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='- How did the evolution of positive cases affect the number of patients in hospitals in Europe (EU)?&#10;- What is the correlation between GDP Per Capita vs New Cases and also Population Density vs Cases per Million? Both questions concerning Europe.' captured-sheet='Dashboard 3' id='3'>
                    <capturedDeltas>
                      <worksheet name='P.rate vs Patientes(EU)'>
                        <selection-collection />
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='- In Europe (EU), what is the correlation between GDP Per Capita vs New Cases and also Population Density vs Cases per Million?' captured-sheet='Dashboard 4' id='5' />
                  <story-point caption='What is the influence of vaccination on new cases and deaths in Portugal?' captured-sheet='Dashboard 5' id='7'>
                    <capturedDeltas>
                      <worksheet name='Deaths vs Vacc(PT)'>
                        <highlight field='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]'>
                          <color-one-way>
                            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
                          </color-one-way>
                          <bucket-selection>
                            <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_vaccinations_smoothed:qk]&quot;</bucket>
                          </bucket-selection>
                        </highlight>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='How was the evolution of new cases and deaths in Portugal and how can we predict the future?' captured-sheet='Dashboard 6' id='8' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E4CC7D4A-F364-49B3-B576-843E559D0F6C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='72'>
    <window class='worksheet' name='Running Total Cases_W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-03-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79D60B7E-FFF6-4E4F-BD1E-1A51E220DE46}' />
    </window>
    <window class='worksheet' name='Running Total Deaths_W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2022-03-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[tmn:date:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33333698-B0FA-46E1-873E-FB472E7A5237}' />
    </window>
    <window class='worksheet' name='Total_cases(pm)_W_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_cases_per_million:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11C2537-F43D-4A94-BC6F-B2D2CE1850EE}' />
    </window>
    <window class='worksheet' name='Total_deaths(pm)_W_map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[max:total_deaths_per_million:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D52C089D-A1FA-4AAA-A2B3-530320B3CDBC}' />
    </window>
    <window class='worksheet' name='Top10_cases(pm)_W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[Action (Location)]' type='filter' />
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3306A115-3181-4D92-A5DF-1A98BBFC9D0E}' />
    </window>
    <window class='worksheet' name='Top10_deaths(pm)_W'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:location:nk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_cases_per_million:qk]</field>
            <field>[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:total_deaths_per_million:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF5C5FFC-6569-4EA6-B1A0-3843BBC2F4F3}' />
    </window>
    <window class='worksheet' name='P.rate vs Patientes(EU)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[twk:date:qk]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A8E783A-BD80-4162-9DBF-1B852198172B}' />
    </window>
    <window class='worksheet' maximized='true' name='Corr.(EU)1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[none:location:nk]</field>
            <field>[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8F1C0EBD-C9CE-42BE-AFAA-68DAB791B375}' />
    </window>
    <window class='worksheet' name='Corr (EU)2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1xzlpxw1055pqb170ee2c09m11sg].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D9AAEEC-D6A3-421D-BCB1-4CCAEDF58E1B}' />
    </window>
    <window class='worksheet' name='Cases vs Vacc(PT)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[twk:date:qk]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E90AE271-D8A4-4108-9A61-85358124815D}' />
    </window>
    <window class='worksheet' name='Deaths vs Vacc(PT)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[twk:date:qk]</field>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B569383-FCF6-432F-8B7A-4A2BD9CCE910}' />
    </window>
    <window class='worksheet' name='Forecast(PT1)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.133tvty0vi8ja41fbt02j06waj94].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4AFBBFBA-BFF3-4456-8AB7-C829E1E3A42D}' />
    </window>
    <window class='worksheet' name='Forecast(PT2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.133tvty0vi8ja41fbt02j06waj94].[tmn:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.133tvty0vi8ja41fbt02j06waj94].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.133tvty0vi8ja41fbt02j06waj94].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{199317B6-7F3E-4027-9368-6BE8B6CA2A4E}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Running Total Cases_W'>
          <current-page>
            <multibucket>
              <bucket>#2022-02-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1m2bf920iz3vwn1am5vg11h8e57w].[none:continent:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Running Total Deaths_W'>
          <current-page>
            <multibucket>
              <bucket>#2022-02-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7877F109-17DE-45FC-BE7E-7292E2171AC9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Top10_cases(pm)_W'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top10_deaths(pm)_W'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total_cases(pm)_W_map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total_deaths(pm)_W_map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{58EA3CDE-D720-484A-862D-54C0EB880FA9}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='P.rate vs Patientes(EU)'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.133tvty0vi8ja41fbt02j06waj94].[max:positive_rate:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{533C54A1-31BE-4EE6-BBBC-85DCFC9A73B1}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Corr (EU)2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corr.(EU)1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{48EC168F-ECD8-45A3-A00F-E32C7FF4A63D}' />
    </window>
    <window class='dashboard' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='Cases vs Vacc(PT)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            </color-one-way>
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Deaths vs Vacc(PT)'>
          <zoom type='entire-view' />
          <highlight field='[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]'>
            <color-one-way>
              <field>[federated.133tvty0vi8ja41fbt02j06waj94].[:Measure Names]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;[federated.133tvty0vi8ja41fbt02j06waj94].[max:new_deaths_smoothed:qk]&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{E9EAA86A-2333-4F4E-A35C-41AE598F88FF}' />
    </window>
    <window class='dashboard' name='Dashboard 6'>
      <viewpoints>
        <viewpoint name='Forecast(PT1)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forecast(PT2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{72B6D4E5-9735-40E3-9F27-77A1F7326959}' />
    </window>
    <window class='dashboard' name='Story'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{78937C25-5D23-49F2-A6C4-87FCD3588036}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cases vs Vacc(PT)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Corr (EU)2' width='192'>
      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
      VCpVlrxwOBw0NTVVqhFNJtOO+4jpusra3F+TzyzSNfTT2F1td7xWzK5gsTVhtrqRJEkI4CjZ
      qomlfWAru3LjvZe4+rf/jWxOo23w7+Dv+SySJGE2myu1K93d3ZVwZSfuVqogy2aCg89v44PO
      1Ln/xMK1l3F4unj4J38Pp7e7JscnaAwOVACqqlZmPJfmL3L9wtfB0oq/51kk2YbFYmH1xjsY
      uk6b30xfW5pHP/vZbdvfDMMgHZ9mPfw6LcGHaO54CEmSyGazlYzM3cjn89jt9jv2GiuXMizf
      /C66ppBLzhGNvE3f6N/dl99CcDDs+zyArusoinLHlP7WtL4kSZsFWnYzN8/9B0zqKnZD5mT3
      4/SPvYCqqiRPOrn65r8EYOj+v7/jiVwuJbn4g39MIbOE2erh8S/9CZ7mQd544w0CgQB9fX00
      NzeTyWSYmpqio6ODv/iLv+DFF1+sjA96e3t59913efDBB/F6vZitLpo7HmRt/odYbD6a2sf3
      8+cSHAA1F4CiKExOTpLJZNA07WPhSm9vLy6XC7v9g3z74vS3iTkSGIYZkLBYPwhl/J2P8dSX
      /2zTWYt7x+8tK1lK+c3d5dVyjlIuit3dy8LCAmtraxQKBUZHR5mcnGRtbY2uri7uu+8+DMNg
      dXW1MkBOJpP8zd/8DV/84heRZTPjz/wWidWLOLzduHyhWv9cggOm+n6Ac+/z7KefYvLSxW1X
      h5ZlmVAotHkFvV23cq8B3tL0tzGMzcrLpvYzlb2FYTNfb7F67umb093JwJlfYWn6W/i7ztLc
      cT8LkUU+//nPV07wt956i/b2dnw+H+vr65Us0fDwMJFIhEQigdVqxWq1fvADWV0Eej9Vzc8k
      OERUnQW6MXWd4eEQszdjuCkSBUaHQty6ucjAYC+6rled0Zi/+ifMvPdfkSSZU2f/GV3DXwL2
      kFEyDDS1cHs2985lT2uZnaqlLV3X77nH8W5p1GO8w5ZhoOtlZJMFqD7zVWu/qroDFLNJIpFF
      XJ4WCtk1EpqJnnYvE1cn8fq799wPMHDml/AHH0CSzbcnzD74fLUpL7PFsvNrDViTXutaoEY8
      xi1bulZm+sJ/Zj38Bp1DP83g/b9WVRn6fvhV1R3AMHR03QBJQgYMNkOUrauYJEkN1Q9wWGwd
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Corr.(EU)1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2daWxc2XXnf7XvG5fiVlxFUpRESdTe6na7F7shux3bgRE0DA/G/pIEmMFk
      ZjAIgnyYZBAk8yWYTAaDABkkAweTxDE84yztdq+K2r2qW/tGiqu4r1XF2pdXVa/emw/VLLfS
      pFQUHylSdX8AwYJU77zzHt//3XvPvecenaqqKgJBlaJ/3A4IBI+THRFAsVjcVXa0tPWk2lFV
      ddf5tB129lQLoGVvTStbT6odLW3tZjt7SgACgdYIAQiqGiEAQVUjBCCoaoQABFWNEICgqjFq
      ZUiRM1y9MojOaqPO58Rt0ZMz+Wiuc2t1CoFAczQTADoDqiqjU1Vy6TjjIZUzJ9soFosoiqJJ
      DFdMhO2cHQBFUZBlect2dtu1fd6OZgJQ82lUkwOKRQx2N/u8BhZCMQJ+HwAGg0GT8xiN2mlW
      K1tPop21F9Zu8mk77Gj2NOmtPk4ec6HTGdDpQK/XoShinZ1gd6OZAHQ6HUaj6b5/0+t1WpkX
      CLYFEQUSVAWqqvL666/z/vvv3zce1a5DLRDscsxmM52dnVy7do1oNEogEBACEFQXxWKRqakp
      AOrr60UXSFA9KIpCMBjk29/+NrW1tdTW1qLbiZTIYrGoSRhUlmXNwmBa2XpS7awlxOwmn7bD
      jmgBBFWNEICgqhECEFQ1QgCCqkYIQFAZ+Rh8+l14/6uQuPu4vdEMIQBBZUz/EOZ+AsELMPhf
      Hrc3miEEIKgMZzfoPgtlu/c/Xl80RMwECyqj6Zvw7JuQj0Lztx+3N5ohBCCoDJ0OGl563F5o
      jugCCcqEQiFef/11hoeHuXXrVkXHhMNhFEXZZs+05+233yaZTGqYE1zIMjI+hcFsp6WpHofN
      TDKVx+12aHUKwTaTSqWQJInm5mYuXbrE+++/Tzwex+fzcfToUW7evEk0GqWhoYHFxUX0ej3N
      zc0cOHCAX/ziF3R1dTEwMPC4L6MiLBYL169f164F0JtsHDzYhyrnCAaXmRobQ2+xaGVesAPU
      1tZy7tw5zp8/j6qqZLNZ+vr6qK2t5cc//jEej4d0Oo3T6SQQCNDa2ko6nWZmZgaDwcDExMTj
      voSKMZvNOJ1ObccAkaU5vA2txBbHSGRU2kwGkRS/x+xcvnyZL3/5yxSLRYrFIouLixw7dgyr
      1UpHRweFQoGamhqam5vR6XTIsozdbiedTtPR0bFuEv1uubbP2+nu7sbtdmu5GlRlYX6B5pYW
      gsEVvE4b4XSRFn+NWA26B+1Uy2pQDVsAHS2BAAANDY0AtIjuv2CXI6JAgqpGCEBQ1QgBCKoa
      IQBBVSMEIKhqhAAEVY0QgKCqEQIQVDVCAIKqRghAUNUIAQiqGiEAQVUjBCCoaoQABFWNEICg
      qhECEFQ12pVJVWQGb9/GWdOITs3hMotC2YLdz4YCiIVXWAyuUlPfRGO976GGirkoq3GZgrqK
      1VxkOSMKZe9lO1DlhbLv3LlFXWMrVFjpVG/24LTp0AMmm4t9Hr0olL2H7VR9oWyjkuOfL/yC
      p1/8Go11D28B9AYzx44fQ9Xp0Ot06PU6ikVRKFuwu9lQAIrBwlOnj5FLpyo2ZvgX6jQYRKFs
      we5mwyiQ025ndTWK0+3ZSX8Egh1lXQHMTQ4jKXrkooJBL97igieXdQWgyDLh1WgpgqPuvY1P
      BYJKWXcMUN/UxnFXHQB2p+gCCZ5c1hXA0uw4l2+PA9Bz+BQn+7t31CmBYKdYtwuk0xtobKjb
      aV8EO0lmBhZehUICgLGxMS5cuEA2m73va6qqks/nH2hKlmVCodC2ubqdrNsCZDIZZEWP3+/H
      5bDttE+C7SYXhn8+A7kV8H8VvvwO09PTPPvss3z44YcoikJ7ezuSJJFOp/n44495+eWX6ezs
      ZHFxkWg0SjQa5fDhw9y6dYuBgQGmpqaor6/fum+qArN/B9IKdP0mmFxbt/kA1hVAe2cPyfwE
      cj5HLl/YVgcEj4HMDOSCpc+RywAkk0nef/99rFYr+/fvZ3BwkFwux9e//nUkSUKWZbLZLOPj
      4/h8PiwWC+FwGFmWGRwcxOHQaCfk+f8Hl/916XNqHE78L23sbsC6AgitLLC8vILJaqfLJwbB
      TxzeAdj3b2H5bTjwuwDs37+f/v5+stksFy5cIBAIYLVa0ev1KIqCw+Hg0qVL+Hw+UqkUExMT
      PPPMM5jNZhoaGrDb7dr4Voiv/3mbWLc+wPzUCOPTSwC0dPbS29GypZOI+gA7ZEdVKYY/xeAI
      gC1QKmz3yKbWrw+gqipXr15Fr9dz/PhxdBWcY1PXVszA0B+AtAyH/gAcHY9mp0J/NiyQMToy
      TM/+PvRbuIlrCAHskJ3B/wzD/xWMLnjhI/AeeWRT1VIgY8OlEEv37vA3f/cTbo5MbfmEgh0i
      +IvSbzkJ0aubPz4zB+8+A+8MQOymtr6tgyzLnD9/ntu3b2/7uTZiQzkdOHwMf85Ave/hK0EF
      u4S+30W9+uvoXH3Q/M3NHz/5v2H1Yunz2H+HE3+18XeLOYh8Cu6DYHm06E+hUMBkMnHw4EEu
      XrxIXV0ds7OzNDc3EwwGkSSJo0ePcvv2bXp6erh79y7PPfccLpd2kaENW4CxmUVWF8cZHhnR
      7GSCbab5mxRfXoAX3n+0h7LmJOgMgA5qTj/4u5++Au89D+ePQT7yKN4CpfmHiYkJ4vE4TU1N
      ZDIZbt26hdlspqamhqGhIb761a9y48YNVFUlEnn0c63Hui1AQUpTyCTJKCaeeubR+5GC7UNR
      FAqFApYHlKLNZDKbi840/Qp85RIUs1BzFpQH5HOE3i/9zi5Achxqz1R+ns8wGAy88MIL9PT0
      YDQa0el05drDfr8fg8FAU1MTFy5coK+vj+npadxubVNs1x0EX/n4PXyNjQQjeZ4+VaEAVJWZ
      yXFko4PGOi92m5lkOo/b5RCD4G2wk0gkuHv3LmfOnOGTTz6hvb2dV199lbNnz9Lb20smkyGZ
      TGI2m1laWuLkyZMVRWzWeOggePx/wt0/hIaX4PRfg35j33fzvV7XmsmgcuXyjdINtNkrWguk
      KDILy0EOHjnOSnAJ8hL1Hfu37KzgwRQKBYLBIFNTU3R3d9PT08Ply5cxGAxIkoTX6+Xy5cv0
      9PTg9Xq1O3HPvy/97HHWFcDAUy8w8NTmDOn0Ro6fOMHI8ChmMyQzKu2iUPa22VFVlcHBQXQ6
      HZIkYbFYKBaLzM/Ps7q6ypkzZ5icnCQYDGK325FledMJ7mtJ8fl8npWVFQKBwKZakTV2871e
      tws0NXKTCx9dpcbnoS7Qx5fPHH6oUUXOMTI6ASYbNR47PqeVcFoRhbL3qJ21LpDBYOC1116j
      u7sbr9dLfX09KysrzM7O0tvbiyzLxONx/H4/+XyeZDJJLpfj0KFDmvu0Y12gzr4B9s8vUDRa
      UZTK1gLpjRYOfu6iQRTKfhJQFAWbzcbBgwe5fv0609PT6PV6GhoauH79OtFolOeee46JiQmi
      0VISVV3d3llJvGEYNBAIYLR52Ne6tWUQgr2NXq/HYDDw9ttvs3//fkZHR/H7/Vy5cgWv10tP
      Tw9ut5vx8XFisRj19fUsLCxo0uXdCTZcCvHRB78glYxgcQd44dnNh7g+j+gC7T0760WB5ubm
      yGazeDwezGYzvgonSXfbtT20CwTQt6+dD68k6N/fu+UTCp4MWltbH7cLmrNhF2hweITWQAuK
      BlvjCQS7lXUFMDVyk4WVKDOzs0QSlW+MJRDsNdbtAnX0HiEt6+jt6WVkbHKnfRIIdox1W4Bs
      IsSVS5/yw//zd/gaAjvtk0DwaCSG4a0+eGMfRCpbDr6uAOzeBnq6Onjq1FFmp6e1dFEg2D6m
      fgjJUUhPwr0/r+iQDQfBHpeTpeUVPL4azfwTCLaV+i+Dzgjowf98RYdsGAY1m83k86WEBYFg
      T9D0K3BuCFQZXAcqOmTDFmA5HGXg6CFWlhY0808g2FZ0OnD1lrLUKly0t6EA2pvrufDux/ib
      mjTzTyDQgtdee41XX32V2dlZisUiqqpy8eLF8ux1JpMhkUigqmr5p1gslr/7eTbsAi2GYrz4
      4vO4vdu7M5dAsFkymQzFYpFQKMSPfvSj8nqk8+fPMzc3x+HDhzGZTGSzWVKpFJIkMT8/TyAQ
      oLOzkwMHftk92lAAuXSCoaEhOvYfpkaIoLpQ8nD932FYfhMavwbH/oyLl66RTCY5efIk4+Pj
      OJ1OVFWlpqYGj8dDPB5nZGSEY8eOMT09jd/vJxQK4fV6WVhY4JlnnnmkXIL1MJvNKIpCLpej
      vr6ezs5O0ul0+S1vMBiwWq3cvXsXKG361dDQQG9vL0tLS/fZWncxnKqqDN+8zOxKlPbefg50
      bW0uQCyG2yN2ciG4+psgLUHkCqCAzgQv3yOac/LBBx/Q1tZGMpkkm81+FijJY7fbqa2tZWxs
      DIvFwtWrV/mN3/gNbt++jcvl4urVq3z/+9/H49naLoMPu7ahoSEmJib42te+9oVc6bWuUDab
      ZXV1lVQqRTweX78FuHXtCvv7urhy+00cNRHYogAEe4SJP4fFfwJANdhBLaJr+x5Ym1iaHsNk
      MmEwGHC73SQSCQqFAs8++yznz5/H6/VisVhwOp184xvfYHp6Go/HQyKRwOPxaPb2fxCHDh3i
      0KFD5HI5wuEw8XiceDxOMpks73BttVpxuVzU1NTQ0tKyfgswfucKF68N8/Vf/RYzk3OcOv7w
      jDCA8OI0Y0tJmuucuC0GJKOX5jq3aAH2ip25n8Cn3wNU1P4/Qun8Nxgs7s+2SnlMPq1jR1VV
      ZFlGkiQSiQTxeJxEIkEmkyGfz2Oz2XA6nbhcLrxeLx6PB6PRWH4GK9oaEX5ZK7YS9SqFLMMT
      8xSLOcw6mVhG5czJARRFQVEUTd4AWglJS1tPlB1VgeA/g5yBppdRMKLXbxgo3HafVFWlUCiU
      uyuRSIRUKkWhUMBoNGKxWHA4HPh8vnILZDabN+XPhgIYGxslujSNsXYfJyrYFUKW0kzPLzEz
      v0BrIIDXqidv8RGo94oWYA/a2cm9QRVFIZ1Ol7sssVgMSZKA0svX5XLh8Xhwu914vV6sVqtm
      /mzoVWjhHjmjD68sVWTUaHXQ3d1NZ1cXOvisULYosLfbuHXrFkePHiUYDJLL5WhtbWVkZIS+
      vr4HHhePx7FYLI/88CmKQj6fJ5VKkUgkiEajpNNpcrkcAA6HA5fLhc/no7W1FbvdjsFguK/n
      oOULcI0Nrfl8NcQKJlxO56YMGj7XZGrVXRFox8rKCgCjo6PcvHmT559/nuvXrzM4OIjf7+fI
      kSNMTk6ysLCA3W4nk8mQTqfLocTLly/T0NDA2bNnv2B7rdWQJKn8Jk8kEiSTSaA0ALXZbHi9
      Xtra2nA4HOUaBI+LDQUQT6QYGR0lf+hpero7dtAlwU6QzWbp6enh4MGDJJNJ9Ho90WiUeDzO
      4uIi+XyepaUl+vv7aW9vJxaLUSiUdgiZmJjgxIkTJJNJYrEYsViMZDJJoVBAr9djMpnw+Xz4
      fD5aWlqw2WwP3MJxp9EVYnD9t6GY2XgMEA6usDQ/hbt5P+2NW9shWowBdo+da9euoaoqbW1t
      GAwGlpeXafpsuYuqqoyNjdHd3c3Y2Bh+vx+z2UwmkyEUCpHL5bh69Sqtra00NTXh8Xjwer24
      3W48Hg8mkwmdTveFgMduu0fq3T9CN/R7wANagLtDt0hKMr7cOO2ND9kpWLBnOHHiRPmzqqr4
      fD5kWS6/zddmUCVJIpVK4XK5cLvddHR04PV6ee6558oP+p7FFgB0gLqxAPoPHCAmqdgcYhnE
      k4CqquVIy+cHoQBGoxGn04nb7aalpYW+vj6sVqtmUaDdRjHwPYxGOxSzGwvg1u2bzMwv0Lb/
      FE31Jzb6mmAXoaoqkiSRy+XKD/la37xYLOJ0OnE6nfh8PgKBAHa7Hb1ev+7b/KEbW6lFuPFb
      MPtj6PkPcPD3Qff4BrObQqeH1leADbpAcqFAR28/RoMeyyajQILtZS3SksvlypGWeGSJ7J0/
      oRCfxNTz67jansPj8RAIBHC5XJjNZu0jcql7MPmXpeST0T+Gnv8IZg13n9aI2dlZQqHQfV2/
      NZaWltYXwPXrVzlx+iwdbS1cuvz46jdVO7Isk0gkiMViRKPR8vobg8GA2WwuD0Kb84M4fG9i
      qgO15ufoTv329jtnawbXfkgMlarJGHfnRrBTU1Pk83nGxsaora1ldHSUpaUlenp6ePvtt9cX
      wL6Wev7h7/8BAwpHzz6/wy5XF2sJHGuhxLVZ0LXp/rX1LG1tbbjd7vJU/33dFscpuGcFRULx
      HmdHZl+MTnjx41IxvZrToN99qbOKojA8PIzRaMRsNmO1WgmHw/j9foLBIIcPH37wWiCtqPYw
      6Fo5o0wmQzQaJRaLkU6nkSQJnU6HzWbD4XBQV1eHy+XCZrNtLtKiqqUHMbuAXPciRvPWi1Y/
      CWVSc7kcyWQSh8NBPB5neHiYtrY2wuEw9fX1pTVqGwng1pWPWI5k6Dl0lK5Aw5YcrwYBrN1G
      SZKIRCLldS2pVApFUTCbzTidznLc3Ol0Yrfbyw/5rouVf64+wEcffUQmk+HFF19c1/bS0hIG
      g6H8ZvX7/QC79toqWguUy6Yp6owbJw1XKaqqksvlymtaIpEImUymvHhrbar/84NQLWPm09PT
      3L17l/b29vuKUGwXiqIgSRLnzp1jamqKn/70p/T393Pt2jWefvppYrEY7e3tTExMlHeL9ng8
      vPnmm/zO7/zO5or0PQY2FECgtYPhCxcYtvno2GILsNdYW2++Fk5cW9OSTqeRZRmr1YrD4cDt
      dtPc3ExNTQ1Go3FHYuajo6McPXqUcDjMP/7jP9LZ2cn169dxOp1YLBaWl5fp7+8nnU5jsVgY
      Hh7mO9/5TvmtvFn0ej3pdJrJyclyMYzl5WVeeukloPSwW61WvvSlLzEzM0MqlWJ5eZm2tjay
      2ezeFUAReOHrv0ZD/ZNbKHutmV97yNfCivl8HpPJhNlsLk/zt7S0YLfbv7BP0nasUHwQer0e
      i8XC4uIifr+fvr4+Ll68yJEjR7h+/Tr9/f0kEgnOnj3Lz3/+c44cOVLRGvmN0Ol0nDt3jrm5
      OZqamohGo7z00kvMzMywb98+5ufnqaurw2q14vP5yi1GJpPZcgrkTrDhGOCDd99CMduwmxyc
      PnNySyd53GOAYrFIOp0mmUyWJ4hSqVS5Lq3b7cbtduPz+fB4PJtauLXT/dtisciVK1fo7OzE
      arXi8XgYGxvDYDDgcDhYWFjg0KFD3Llzh76+PgYHBzl16tSmfdzSIFhOQ3q6tEeP3rSrxwAb
      CmDi7k0uXbvBsWfOcbCreUsn3AkBrK03z2QyxOPx8izoWi6ow+EoZw/5fD6MRiNWq3XL/fPd
      /MfdCo8sADldqiAfvV6abT3zI+Sisquu7aGD4KmRm9wemaRYyDMxPVeRAFRVYW56ErOrFrfd
      jM1q+axQtrZ9wLUmdm0ZbjweJ51OlyMtNpvtvqQKm8227npzWZb39oKu3UpqovTwo8DCP0Fi
      EP2N/wQmJ5z8S7DUP24P72NdAXhr6qitidHS3s2JY5UlxINKXUMLo6OjpL0udHmJ+vZHK5S9
      lguaTCbL/fJkMokkSej1+nJ9Kp/PR3NzMy6XSyTf7BbcB6D5m7D8NvT8Foz+CfrQhdL/3Tte
      WjO0i1hXAMHFOYLhVQyRCBaHi4G+zoca0ukMxFeXQWcil0mWCmWbH1woey2zf20GdC2zv1Ao
      bcq7NgBtbGykt7cXg8Gw7ma9a1GbzbCbizfvBjvwy0LZm0MPp38CxQwYnejH/xt6dIAOxdG7
      pZJbO1Yoew1VUcjLMpYKogiKLDEyeg9FZ6K21k2Nw0o4UyqUvfY2/5fT/Ws7eK096B6Ppxxp
      Wa97spsnwp40O5rNBCt5ivOvYTC7oOGrW1oxuqODYFVVKebSjM8FOdDTtaUTrq6ucu/evfsy
      iB5lACoEsHN2noSlEJXY2dDa7cvvMzoToufw1kKgAF6vl9OnRVZZtbCyslLeibml5ZeF1m/e
      vMnAwMBj9OyLbCwnvYmurg6MehEpEWyOdDrN8vIyH3/8Ma+88gqffPIJhw4dYmVlhY8//hiD
      wcDp06cf624Qa2zogclk5N74KFJB1AkWbJ7a2lqOHj3K6uoqZrOZqampcsJ8NpvdFQ8/PKAF
      SMs6vG4b2URsJ/0RPAE0NJTWjkmSRH19PZlMht7eXgDm5uYeeV3SdrCuAObuDROPJcgXdDTV
      7a6JC8Hux+EoZYcdPXoUAL/fXx50mkwmvN7dkzq5rgB0Oh0msxlbfSM+j8gJFmjH2pLp3cL6
      dYKdLow6yBdySFJup30SCHaMdVuApdl7zC+tYDIa8DUKAQieIFQVw8T/gKm/gI4fiJxgYWd9
      ntiJMCkIr3eAkgW9WWQ8CqoMk6uUpwDg2PeAiTCB4EnEYKP4pbcwRD6C2mdECyDYaVSID8Hg
      739WiXLbe+Bf9MBcB4FfA1uTEMCeQc7Ard+GS/8K0lOP25tHR87Ah1+D4T8s/c6FNT9FsVjk
      rbfe4u23337ocm7RBdorzP4tjP1J6bMiw9mfPF5/HhVVLuUKABRzpR+NmZ+fp7W1leXlZSYn
      J/nggw/u2zRgfn6edDpNc3OzEMCeweRjbU97zDWP25tHx+SG038DUz+E1l8De8vDj9kkbreb
      0dFRTCYTU1NTtLW1UVtby+HDh/H7/bS3tzM+Pl5aki/CoHvEjqqU6vhKK9D166W9ObfRn70e
      Bl3bFXpgYICrV6+WiwCuZRTmcrnS1vBaCUBVZMZGRkhICnW1bjwWvSiUvYftaCWAQqHA0NAQ
      AwMDXLlyhePHj2MwGCgUCkQikfLGWpWwowkxm0WnM+Cvr0VN5MmloowFVc6cbH1gTvBm0TLf
      dbfl4H7ezuDgIMFgkOeff37DZcOhUAiHw4GqquXFZ1r6A4+aE3w/qVSKDz/8kM7OTi5cuEB9
      fT1DQ0P09/czPDzMzZs3eeWVVxgfH6ejo4N9+/ZtaGs77rVmAlCKGW4NjtPV20tB76LLo2cx
      HKelvrTyT6tdG7TchU0rW1raKRaLrKyscO7cOa5du0YqlUJVVeLxOKdOneLGjRs0NTXxzjvv
      8K1vfQu3283ly5fxeDzlrDutWgAtbBmNRnp6enjjjTc4evQosVgMVVUZHh7G5XJx/PhxnE4n
      sixz584d9u9/8E4iWv/NNAuD6gw2zjx1Cn+tj472TvyBDhprRH2xzaLT6cjn8+TzeXK5HE89
      9RS5XI6Wlhbu3LlDOp0mGo0yMDCA2WxmeXmZSCTC4ODg43Z9XUwmE319fTQ1NdHV1YXJZMJk
      MtHS0kJDQwMWi4VQKITBYLgvfXKnEIPgXWhnZmaGqakp+vr68Pv93Lt3j9XVVdrb2xkbG2Pf
      vn3Mzc0RCASw2Wzcvn2bhoYGDh06tOvGALC777UQgLCzLtUiADETXBWopRlXKcjjWHqwmxEC
      qAbCn8BbffBWLyy9CcCHH35INBplcHAQWZaRZZlCoVAedKfTaQqFApIkIUlSeRe/te/uQMdh
      RxAzwXsRJQ+x2+Du23BC7D4W/h7yq6XPc/8Xml7mzp075XJGFy9eRJIkstkssizT1tZGJBIh
      l8uh0+kYGhri2LFjeDwe0uk0er2e559/flsvcacQLcBeQ5Hh4nfgwml490sgpx5+TOAVsPhL
      SyjavgdAd3c3zz33HCaTiaWlJYLBIPX19fT39yNJEi6XC0VRSCQS+Hw+3G43p0+fxm63YzQa
      H9/O2kUJUpOl+6ABYhC81+zIKfiZH4pZ0BngpVvg+WWtsPXtqJCPl6q7W2qA0t48ZrOZYrFI
      NBrFZrNhsVjQ6/UkEgl+9rOf0dPTw4EDB9Dr9djtdsxmM++99x6HDx+mrq5O+2t7mJ18GuMn
      vwqh90q1B07/dekebNaOiALtYQGoCgz+Hoz/KbR8B0791X01ep/oKFB0EOOFgZKQ9Rb45vIj
      VacXUaC9jE4P/X8EvxovrarchQWqtw1HFzR9A/RmaP9+Kb1xi4hB8C4lkUigKAoej+eL/W2d
      DnRffPDz+fyTXfVGb4azP4V8BCx1j9T9+ZcIAewkqgqLP4PEXej6TbDUbvjVN954g5qaGvbv
      308sFiMQCJDJZAiHwxQKBY4ePcq1a9c4dOgQkUiEdDqN0+mktraWS5cuceLECWw22/1GM7Mw
      /ddQ9zTUv1AS0l5DbwKrdmV7hQB2ktD7pQgOCkQ+hWde3fCrkiQRCoVobm5GVVUuXbqEXq8n
      n8+Xqz+GQiHOnz+PxWLB7XazvLyMTqdjeXmZjz76qFzLt8zF70D0Wqn1ODf4y90RdiGvvvoq
      NpuNnp4efD4f8Xgcm83GrVu3OHv2LIuLi3R0dLCwsEBNTQ2KovDuu+/y7W9/e1PjDSGAnURO
      AErpcz7+wK92dnZit9uRZZmJiYlycRFJkvB6vSwsLFAsFjGbzTQ2NmIwGEilUoRCIcxm8/rL
      qPOfbXSsyiAntb02jVmLzYRCIbLZLLOzsxgMBlRVZXZ2ljfeeIOnn36aQqHA9PT0IxflFlGg
      nbSj5GHkjyExCAd+r4Lwpcb+hD+GsT+F+i9D9289sAv0uKNA58+f56WXXuLOnTvlYyORCJlM
      hnw+TzQaJRAI0NnZyeLiIrOzs6RSKX7wgx889FwiDKqhrSfVzuMWwE7ZEWHQbeCTTz7hvffe
      uy+bamFhYcPvy7JMJBLR1IcrV67w4YcfVuxDMBjU9Px7Bc3GAKqqkk3FwOIGOYfNZiaZ0r5Q
      9l5AlmVsNhvXr1+np6eHYDDIzMwMmUyGkZERBgYGuHv3Lt3d3SwtLVFXV4fRaGRsbAyr1crJ
      k1uvyxaNRunq6uLq1auEw2GOHTvG0NAQoVCIaDRKU1MTk5OTDAwMMDQ0xOrqKt/97nc1uPq9
      hYYtgMrCxBChZJ7llSWmxkbRmR5eXvVJZG5ujlgsRjQaJZlMMjMzA8Di4iJHjkfjw5sAAAZH
      SURBVBxhcnKSYrHIjRs3SKfTNDU1MT8/Tzwe5/bt25r4sLCwwL1790ilUnzlK19hZGQEKFXs
      HBwcJB6Pc/bsWe7evUtzczNtbW2anHevoWFSvJ7mlmZWgXwmSbyCQtmbZa8kxft8PrLZLAMD
      A9y4caNc1V6SJN599126u7tRVZWmpib8fj8Gg4G6ujpSqRSNjY1bSkRf8+fkyZMcOHCAcDjM
      O++8w5EjR0ilUgSDQRobG6mpqcFgMNDV1cXg4GA5L/fzaJEU/3mfdqMdDbdFKXD3xjWy5hqa
      693UOn9ZKFsMgktMTk4yMzPDs88++4VjdttAsVoGwSIKJOysS7UIQESBBFWNEICgqhECEFQ1
      QgCCqkYIQFDVCAEIqhohAEFVIwQgqGqEAARVjRCAoKoRAhBUNUIAgqpGCEBQ1WiYEaYwPjyE
      3u7D7TDjsZuISgYaa91anUIg0BzNWoBiLorB2Qz5LOHgIrdHZqgXNcIEuxztiuTpTRRyGfJy
      AYvdRY3dSDqnzRbWAsF2oVkXSG9y4bVFMdQGsJn1OOw2Yok0WKto81bBnmPbM8LWcoI3Kvi8
      WVta1RvWytaTakdVVVRV3VV/t+2ws+1bI66dSKsHVys7Wtp6Eu2oqoqiKLvKp+2wsyNhUC3e
      Ilra0dLWk2pHS1u72c6OJMULBLuVHdsden56gnAsTW9nI1HFTTayTPe+zoqOXZqdIpLK0tLS
      Qjonk0tGae/ah2ET+9vnsymu3xrh5JkTTI4MklPM+L0u3LUuVsIZOgKV7TmvFvNcvXyDgydP
      snRvmLxioqmpFr3BSnh1la7OdiryqlhgdHwcSdbT4LWyHI7R1dtJKqqQzUbo6t5XmR1gemKU
      WEqiuc7LQjxNe6AFKZUjn0sS6OjCqK/MUiISYm5pBZe3jlQkCGYHNU4bLpeFaFZPoMFXkZ1c
      Os7E9Dxmu5tiehVMLmrcdpw+NyvBOJ1tzRVeGURW5liMFvBYFVZjGTq6AhRlM9FokH37uiq+
      R6oq8+nHlzgy0M/IyD2a2jqgIO3cTHA2r7J/XwurKyGuXr5CbWPlN0FFRS0WKOTzjN+5ht5R
      t6mHH8BksVPjdqIqRfRmO/VOHeFonCs3hwk0+ys3pDfSUF+DoqioQKGQIy9luXL5Gv6mlor/
      IOiNtLW2YNDrSWTz9PftI7y6zJ2rl7HXNlRuB2hpbcNkNJBXwaQWyRXyzIzeIWdwVvzwA7g8
      bpR8jnwmhb22EZuxSCy6ys2RGZr9ldfistidmPQKxc/uUT4vIaWTXLl+h6bmxortKLJEKCFh
      VItIBYW+9jpWVqNc+/RT6ppbN3GPVGbv3cPl9SLLBXRGA7lcjpX5yZ0TQLGQI7IaxWy10t3b
      zcrSSsU1y+1OL20BP+FQjJauXpLhZZRN9txUVaEgFygUFaRslngqh9ViZV9rPcuh2CYMgSwX
      yBcK1NQ1UGNVieegt6eD5eUVKnVLLeYYnZijq6sDigVWVyOYTDY6unuJrCxXbAdgdGSE1s59
      uJwu2tsCREIh/K1d5BJhipswlM7k6OjqJJVOkk4kyGTzWGxOAn4n4VimYju5bJamQAeZVJz6
      xhbsuhyZopmezmZWgpVvAiylkuRzEnMLS0j5POFoEpvFTO/+HpYXFiu/R6pKviCzsjhHLF1g
      X1cXiegqnrqmnRsDFKQ0oXiWpjoXOcVEMZ/F7nBUpOJCLsPiSoRASxMFuQhFGZPVhmETbzcp
      HWdhOYzd7cNlhpxqwmk1YbJayabTOByOiuwU81mm5xYxWR3UOM0kJAV/jRtVZySfy2K3Oyqq
      PKTIBWbnZsFoI9BYw0ooTnNzHTlJQS3msdgdVHp58zOT5BU9Lc2NLC8HaQm0IBdkdGoRvdmK
      yVDZey6fTbGwHKa5tRUpEUE1ObCZ9JgtFjKZLA5HZRsdFws55hcWqW1ooZiNISkmfE4bRouF
      bCZT8b0uoZLNSBgNCqFYloY6D0VFj5yXsFV4r9eQshlMZjNLCwvUNragU2QxCBZUN2I1qKCq
      EQIQVDVCAIKqQZFzBMNRVFVlebkUaBACEFQNmdA0f/G3f08mNsuf/tn/IRxaEgIQVBcdDW7e
      /fQeBw+0shoKCgEIqge90UzPgT6yuRxNNR5CoaAIgwqqG9ECCKqa/w/a62k04NzU4wAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 4' width='192'>
      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
      BLx6PAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      qAYZAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 6' width='192'>
      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
      p/L8/1YpXYH3XPXGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deaths vs Vacc(PT)' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Forecast(PT1)' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Forecast(PT2)' width='192'>
      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
      ujFGAIOq5v8DITCrN4FLbUEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='P.rate vs Patientes(EU)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dd5RkV33nP+9V7Iqd43SYnpmePEqjLCSBEAaZsIDx2l6wDg7LGhyO12nt
      Y2zwYrOHdVqMjXdZH4fFYCRsIwRCgLJGKIxGGmk0oXs6Teeu0F05vHT3j+o4naq6uqqrp9/n
      nD5n6tV79915dX/vpt/v+5OEEAITk12KvN0VMDHZTqzz/0gkEui6vqWFZ7NZHA7HlpZpYrKV
      SKUcAkWjUfx+f6mKNzEpGnMIZLKrsW58yvqEpscJhKPUN+/B47QidA2H24tVlraifiYmJaVo
      A6hvasNhkYhqOhPjY2Q0G0cP+7aibiYmJadoAwDBeChGT08Tp869SFvPSRAC3TAwDANN04q/
      hYlJiSjaAPRMAn9dM5IkcfD4TajpJKpej91qQZZlrNYtsDETkxJhrgKZ7GrMVSCTbcFQwqih
      p7e7GlsxBzAxKQwhDLTZHyH09HZXxTQAk/JjJHoxlBAIHaFnkSzb5y1gDoFMyoqupTjb9zh/
      /9p5/vJHryGU0LbWxzQAk7LyDy98my889yIAj1waxMhObWt9zCGQSdkwDINHXn+aLz9wH/Vu
      Fw+du4SuhLa1EZo9gEnZmIgEQA1R56oCwGWzkkgGEcLYtjqZBmBSNp7ve5V3dHcgSTk/Ma/D
      QSw1A3py2+pkGoBJ2fjBW89x/77Ohc9um42kqmEoM9tWJ9MATMpCKD7LRLCPrppFzwCPw0ZC
      MRDbOBE2DcCkLJwZfotbWmuwWhanvD6Hg1g2m9sT2CZMAzApC4+fe453H+xZdsxls5FWVYQW
      RYitDcfNF9MATEqOqmucHTnP4cbGZcf9TgfRTBahZ0HPbEvdTAMwKTkXJvrZX1ePy7q8uXns
      NhKKCgiEULalbqYBmJScl/rPckdXN0jLw2Q9djsJRQEkswcwuTYRQvDiwOvc2dXF1c3N47AT
      zyogSQgjuy31Mw3ApKRk1CzB+CwdPufCBtg83oUeADANwORaZDA4Sld9G7KRWvGd22EnkVUB
      CWHs0CGQmk1x6eJFoskMkUiEUGAazTDlRk1ynOo7w10HbkJo8RXfeWw2kqqChAT69vQARTvi
      DV/uQ5UdYBgMD1ykqnoPdQ05zz8hBIaxfY5OJtvPC5fP8On3fQKhPAOyfdl3HoeNeFZBAIae
      3pa2UnQPoAuZffs6mRgbX2j0JiYAiUyKQHyGrtr6Vb/PrQKpuTazTXOAonuA7n1dXO4foq1j
      L0Kvx1AVVF1gt8pIkoQsm9OM3Urv9BAHmjqxoKJL8opJsARYJAkDsAhtW9pK0QZgd/k4evTo
      3CdXscWZXEOcunyGuw6cROhJkFZv3FZZRjMMbDt1EmxishpCCE71vco9h27OGcAqTU0CLLKE
      bhgIw9wJNrmGCMZnUHWNRm/duru8FknOrRqaPYDJtcRTF1/kviO3I8vyumv8VllC0XWE0BGG
      WsYa5jANwGTLEULwg7de4B2Hb8sd0NMrJsAAkiThcdhJqXMNX5gGYHINkFGzTEYCHGrZB4Aw
      1laA89jtJLIKILbFH8g0AJMt5/TQOQ62dGOzWBFC5Pz918BttxFXFEDeFo9Q0wBMtpznek/z
      nhP3zH0yYB1ff7/DQSyjgGTZFq1Q0wBMthTd0Hlp4Cx37r8xd0AY6/YAHseSmABzCGSy04mk
      YtitNjzOuU1RQwHWjvd1222klNzk15wDmOx4wokI9Z6ahc+5JdC1EyZ6HQ5iWWXJueXFNACT
      LeVKaILO+rbFA3qa9Qxg0SUacwhksvMZDI7SUdey8Hk9PyBYHhZpGoDJjmckPEF3Q8fCZ6En
      kdZpZr55A4Bt8QcyDcBkSxmbnWJPTdPCZ6FnVqhBLMVhtZKdT6VrKGWPJzENwGSBweAos8lo
      UWWEExFq3Esyg24wsXXZbCTV+VUgBShvVJhpACZAzn/nzx//ex4+/b1Nl5FRs2i6htfpXix3
      g3F9lc1KRp3rAYQKZe4BzAwxJgAomsqzva9QZd98wrqpaIgmf8Nyxzd9pRrEUqqsVtJzQ6Cc
      N6jZA5hsA68MvsGxtgMMBcc2XcbYzBQt1Yvxv0IYG/YATpuVrKbPjf0NENqm778ZijaAVGyG
      8+cvMBtPEYvHicyETVmUHcjTl17mwbs+RCyTIKtubjXmSnh82QoQQoM8VJ8dVisZTQeksvsD
      FW0A05Nj6JINl9PGxMgAE6EYFomF2bwQwvyr8D9VU3lp4Cxv67mJWnc1gXh4U+UMh8bpqm9b
      PGYoCEPd8DqH1bKwEiTmVoLK9Vf0HKCr5zh6JsrFgVESM2Hq9jQAOV2g+T+TyqZvahh/lRen
      1cHe+j0MTo/Q6m/c+MKrGAyM8qEb37XwmxtqilwCvPVHBA5LzgCE3YGhJsBWvjZTtAHMBieZ
      mA7T2tGNaPCjK5k5WRQLsixjsVi2op4mJeTZ3ld44Lp7sVgsHGrtpj84wj2Hby2oDCEEwXiY
      PXXNC7+5hIouWZA2kDtxWq1kdR1JtiChlrXNFD0Eqm1s5djx49T53dTX1dHU0obdas6tdwpC
      CJ7pfYV7Dt4MwL6GDvqnrxRcjm7oqLqGw7qo/iaM9LqbYPNU2aykVA1Jkud8h8qH2VJ3OROR
      ABklQ1tNMwD7GtvpD4wUXE48k8JqsWJbkgNMaEnWc4Sbx223k1S2Jy7YNIBdzuPnnuf+Y3dh
      mRum1LqriaRiGKKwlbwr4XH2NXYs3wMwUjnh2w3wOuzEs7nl0h23CmSycxFC8Pi55/jgjfcv
      HHPY7PicHkLxwnL3zq8ALStfz28I5LHbFnoAYfYAJuViKppLT9q2xHkNoLO+jaFQYRtiYzNT
      7JkbRs2T79vcY7fPBcZTdpl00wB2Md8++yTvve7eFZo9h1q66Z0cKqiscGKWOk/1smP5GoDf
      6SCWmRsClTkmwDSAXYqm63zn7NM8cN29K7472LyX/unhgsqLpONUu3wLn4UQsI4e0FI8S1Ml
      CWVu76A8mAawS+kPXMFlr6LBW7viu57mvfROFdYDRFNx/FXexQNCy1vq0GO3LcQFI4y83Ce2
      CtMAdilPnP8R773+3lW/q/fWEE3HmU3G8i5vJhGhdukQyEiz0Q7wPH6nYzEqTGhldYgzDWCX
      MhAc4Whbz6rf2SxW3nf9fXz1R9/KqyzdMIhnkvirPAvHhJYinz0AAJ/DQSQzFzgjyusRahrA
      LmU6GqLBW7Pm9x+74wM88vqTJDLJDcvKagqSJC2bTOeC4fNzaaiac4leuLaME2HTAHYhQgjC
      iQhNvtVzdwH4qjy874Z38FAeEWJZNYvbUbX8HhsEwizFbrGg6HMGIJU3a7xpALuQWCaB02bH
      brWte95Hb/8A3zz9OBl1/TdyVlOpsjuXH9TzHwLZLBZUfXHlx+wBTEpKIBqmfpXVn6up81Rz
      x/4befj047llzTWIpq9aASKn8pZf8webLJPV58f95U2abRrALmQiEqC1Oj9//19+58f4++e/
      SSgxu+Y54atXgJgbAuXhBgFgt1rQDYEhRE5DqBKGQMNDQ7z+8rO82Vu4a6xJZTMUGqOrfk9e
      51a7vPza/Q/y3x/56zV7gXBilpqrN8EKdGpz2xcV4ipiCDR8+Q2m4oJ0LFy2ypiUh9Hw5DL5
      wo147/XvIJKO88Ll11b9PpKMXeUGIQpWefM67CTnd4PLqBC3pgEcOnEL777vbjr25P+gTHYG
      g8FRuuraNj5xDoss8/vv+yW+8NhX0I2Vu7QzySi17iUGIIx10yKthsduWyKRuM1DoNTsJA8/
      /DCPPvoo05HtSV9pUjpmUzHq19kDWI2e5r101reu2guscIQzsgW7M/idjkWP0O3uAVw1Ldxz
      241oms7G29mCob7zRJJZQuEwk+NjpixKBSOEIJFJ4na4Cr72wbs+xNdf+s6KucDVcoiigCXQ
      edxLHOLKOQdYMyg+mdU5efPNeH3rvymSkSDxZBp7VmPkwlkaOo7QLIGu6xiGgaaVV+jIZH0i
      qRguexUyUsG/zbHWAwwGRwjEwtQtGfLEMyncNudCeUJNIISEKEARxOewE01nMQwDSWTK1m7W
      NACvQ+LV187Sc+g4NX7PWqcxHQiRScUJhWaorq0lk87tAMqybKpCVCBjs1O017Vs6nexWCz8
      9G3v419e/i6/ev/PLhxPKWm8Ls9CmbqRQpItFNILeO12YtmcSwVCwyJL6+YV2CrWNIDZlEZD
      vZf4TADoWrOA7p4jtO1pR5Od6Go16OqcLEqu8qslSDbZPkZnp9lbv2fTv8uHT/4YH/zip/jE
      238Kpy2nI5rMpvA4XItlGqmcwkMB+JwOphNJJElCCECoSLJzw+uKZc1a7u3YQ3AySHPXvg0L
      cbi8uJ02fF4vvupaUxalgrkSGitoCfRqvE43N3Ye5lTfGQBUXUO5yhWiED+geXwOB9HM/Njf
      KJs6xKotdfDi61weGiWraoTDhQVHm1Q2V8IT7M1zE2wt3nHkDl4efAOAVDa9mBFyjs1MYn3O
      xUwxOY3Q8qw+rmoAnfuPYLPbeec7347IFm7NJpXLYHCU9rrWoso40rqPixMDQM6xzlt11Rxx
      E9ImHrud2Jw0Sm43uDzyKKvOAdRMglAwQDSW5MRNt5WlIialR9N1oqn4qmGQhdBa00Q4MYui
      qURTcaqXOMLlJNELf3v7HY7FuOAy+gOt2gM4vXX43Q6C0yP09Q+UpSImpSetZnDY7MhFLkxY
      ZQuNvjrGZqeYTcWWe4Ia2U2JW/mcS+cA5dsLWHMVaG/PcWxWK67q6rVOMdlhTEdDNPrqtmRl
      7nDrfi5ODKBoKg2+xR5FaPFcWGOe0WDzOKy5mICcR2j5Uqau2gNMDFzg1VdfoeXgrdx4dH9Z
      KmJSei5PX6Gnae+WlHVD52FeH7lANB3HtzQWWI1uav1eJhdSqRsGEuXrAVat6dD4BCdOXMeb
      rzxDIBwpS0VMSs/l6WG6G9u3pKzjbT1cGO8nGJ9ZFloptMi6eYHXQpJAlkAXoqxJs1etac+B
      HmKxOO3tHWSy5dVqzBfN0ElmU0TTcRStMutYaQwGRzjQ1LklZdV6qgnFZ5lJRpcLYqnRvANh
      liJJErIkoc/5kW3rHKChpQOnw8Fbl0eory/Ma7Bc/Mmjf8sL/WewSDIHW7r5i5/+ve2uUsUz
      Ep6kvXZr3NudNgd13mrOjfby4J0fXDgutPimypMAqyyj6jpgW0iaXWpPgjX7qtfeeJPujmZO
      n369pBXYLG+MXuSrv/infOtXv8y50V50MxXTumTULIlMaoV+ZzEcad3Pq0PnFlaBhDAQemJT
      ZUmShNt+ddLs0nsVr2kA9bV1XL50AVXTiSUrKyYgqykks2lqPdXYrTYafXVMRKa3u1oVzUQk
      QHN1A/ImHcxySeWW+/jf0n0dVXbngiSK0OJ5yyGuRrXTyUxqbgm1TAaw5jLoTGSGWEqlukbC
      5y69U1IhhOKz+Ks8C0kd5tWMt6p7vxYZCo6yv7Fj4xOXIITASI9gpIYwlCCSZMHW+G4kS871
      4Za9x6l2+RbkVYQaKcqD0+ewk5jPE2Bkc1njS+xLuWZte7o6qKlv4cChw6WtwSYIxsM0+RdX
      Hg617OPipLlhtx59U8McaOrK+3yhxVFDT6CGn8bIjIKRwdASKIHvLfjpVLt8fOXjf7yQF0yo
      sxTTYn1OB7Pp+dGGBKL0kWFrGkDv4BA1Hhu9ff0lr0ShjIQnl8W0Hms7wPnxy9tYo8qnb3qY
      /XmuABnZIMrUtzAyk0hLNrQkSUJoSdTg4wg9jSRJnNx7bGGiKrRYXimR1sK7VCYdvSwOcWsa
      QJ3fz/DIKLUNheeLLTVXQuN0LknH01rTyNjM1DbWqPIZDo3TkccQUagx1NAPgdVjOSRJwlBj
      KNPfRWiL6tFCiNznIlZtfEsSZeT8gUrviLmqAVzpe5PewWHiSQW9AkMaR2emlo33fVUedEMn
      q5YvmHonYQiDZDa1bL1+NYSeQQl+H4z1f3NJkkBPoUx9GyMbnL9600ug8/gcSwLjJUvR5eXD
      qpPgjgPHqXbClK2bnmZ3yStRKFfC47TXLuajkiWZroY9XJoa5Lr2Q9tYs8pkJhHF63TjsNnX
      PEcIgRY5vTC02RBJQggDNfh9bI3vQbJ6EXoKSV77HhvhcyzGBEiSnFOYLjGrB8RcOMN3nn2d
      l558hDPnK28OEM+k8DiXG+ah5m76CsxqslsYCI6wr2GDFSA9iZ7sL2jjKRe/a6AGHsdIF55b
      +Gq8DsdiphjKow+0ag+w7+hJ9h09mVcB0fA0Y5PT+OpasaCSTSZp796HVS7N+pWma2iGhsu+
      XI77+J4enut7lY/cXJLb7mguTw2zr2l9A9BiZ5dNePNGkkDoqKEnocgYXpfdSkpZso9Qhknw
      mvsAQgj0TILzg+Ncd3TtYYXH60cfGUFIEv1vnaH9yB1YSiiLMj47TYOnBmEYaEt2f/c1dPDl
      p75myrCswuXpYe7af9Oaz0boCbREP7mlx01uPklOEBSV4M5ltZJUFIy531VoSaQS/55rGsCb
      p59nLBijtfvIugWkM1k6OjsYnZqlrWs/iZlpREsNFosFWZaxWte8xaYYj07TWd+2oty2umYS
      2RQGYkPd+93GUGiMn7/7I2v+FmrsPJIkb7uCh9tuJ61pyHMbnIgsFoulpPVap3VKeDxerPL6
      O3s2q4VwROFgz16EriEJHd0AuURyQKPhqRWJnQEskozH6WY2FaPJV1eam+9ANENnOhqi2d+w
      6vfCUDFSQ9ve+CEnkBtfMgfAUHMSi9LWvkSXsmbrdrs9hILTKNr6Go8Ol4fOjnbsVgsOhwO7
      04XNUrqHORweo3MVYVdJkjjRfpDTg2+W7N47kYySwWqxYl3jjSSUYC4zYwVgkWVkSSI7rzAn
      1JInzFvTAMKJDDX+KjLxygqIGQ1P0r6Grs07j9zB05deKnONKpupWJhGb93isOIqjMw4lZQn
      xWO3k1LnGr3QSx4XsOr/fHpskGQiRWQ2gdNXnILAViKEYCQ8saa094n2g7wxcglVr4w3WiXQ
      Pz3MgeauVb/LObuNVcTwZx6vw76YMhV5UxIrhbCqASQTCYQk0dzeTVtT5QTEqLpGRlVWCDHN
      43a4ONDUxQXTL2iB/sAI+9byAhUqhrp26qPtoMHtWnSJZnMqc4WwqgE0trThcdpJxGYJhqMl
      rUAhLMp6rN1l333wJD88/0IZa1XZDARG1lSCMzITZRGgLYQmj5up+NwOcBl2g1f9319+6zX6
      r4yTSKbQ9cISHZSSYGyGWrd/3S777oO3LMj2mcDE7DSd9asrwRnpkc1tfpWQZq+bqUSu0UtI
      JR8Crbq+dMOd93PDnSW976YIxMKrLoEupa2miYyqMBUN0exfOxH0bkDRVMKJCA2elfM4IQyM
      bOVF0bV4PZwaHs19KINEYmX1fxswHQvTmMca/72HbuXF/tUTuu0mZpJRaj3Vq68A6UmEtrn4
      3VLS5FnsAaD06hA7ygACc0t6G/H2Q7fy5IUXy1CjymZ8dnrNHtPITBblu18qaqqcS1aBoNQx
      kTvKACajgbyGNQdbuhkIjq6b3Xw3MBC4sqYXqJ4errjxP4DbZlu2G1xMhFk+7CgDCMVn8xoC
      2SxWJHJuALuZgcDoqkpwQugIJbQNNdoYl92GohsLMjeixMoQO8oAZlMx/C7vhudZZAtC5Fyn
      dzMDwZFVA+GFMlPWTIyFIEsSPod9MTi+xClTd5QBhBORDcP6IOdT4nG6iKUrb5JXToKxMPWr
      CGEZ6StU8k/f4HYRntsM25aNsEokqykYwsCTZ37bJl8dgXi4xLWqXDJqlrSSWabcPI+RnSo4
      iV05qXe7mJ5fCdLTiA1ilIuhcp/CVSQyKdz2qrz9VlprmhjdxUoRk5EALdWNWK7yAhWGiqEE
      17iqMmj2uAkmc29+ITQoYWjkDjKA5Kpvs7Vo8TcQjO3eHmAwOEr3Kj5ARma8HIqDRdHi9TAW
      W1SEKGVs8I4xgFBillq3P+/zW6obmYxU9puulAwERuluWLkCZGTGC87eUm6alvQAOX+gXWgA
      hjAIxRc9FafWiWpajWZ/PRORQCmqtiMYDI6yv3G5EpwQAqEEK8r9eTWaPe7FOQDSnORiaahY
      A+ibGubX/vlzC58DsXBBvj31nhpCicpy9S0XQoicEsTVewBGBkOtrACn1ah3VxFMpuY2MqWS
      CmQVHWwZDU8zOjGFw1uPTVJIxVP0HDlStCxKJBXj3FgvGTWL0+YgEJ/haGv++coafLWE4rNl
      SbJQaWiGTlJJr9gzEerMphLYlRubJVc/zTCwWSwIrXQu+UUbgK+mDkcgRG21n3MvP0HX9W/f
      ElmURDpJMD7LxMw0HXWtTEeD3NtzS97lWZARCBKZFFU2x6bqsFOJpxNYZQuykJY9LyM1iUBG
      VHgyEZmcOouq61gkCUmNo2kqpfALKtoABs6/QVw4qRUGnQdPkAxcQa0/jr1IWZSkkpPo6wsM
      093UQSAWprWmsaDy/FVespqCt6ry5B1LyWhkiq6GPdhsy+VhVD2CXCq5ji1EJhcamVBUXHY7
      Qk9iscgl8V0q2gC6j96AYRjIskxt9cZuCvkSz6a4vuMw50b7ePfxu0lm07gcVRtfuAR/lYdI
      Kka9t3LCOstB39TQimR4QhgVF/64Hk0eNxPxBI0eN6DnlKKtW9e+5il6Ejz/lpflnLDS/F+x
      JDMpbtt3HZemBoHczqbLXpj0XqOvnqno7lsKHQyMrvQCNTJlkRvfKlq9niUrQXIu+2QJqNhV
      oFgmwaGWfUzMTqNoKoYwcBY4lm+raWIqWplej6VkODS+IhBeKDNFyRaWmxafh8lYzpdLkqwl
      670q1gCS2RSNvlpcjip6Jwep2SAWeDV2416AEIKh0OiKfGmGEqq4APj12F9XQ29oJvdBkpYl
      49hKKvaJpLIZXPYq9jV28HzfqzR4C9cnavY3ENhl7hCJbAqQVkjHCCVU0Q5wV7Ovtpr+8OxC
      UFOp9gIq9onEs0k8ThdH2w7wXN9p6jdhAC3VDUzush4gnIisyAUshMBQZ7apRpujzuUiq+uk
      51TihBYvSYRf5RpAOoHH4eL4nh5e7D+7KcFbX5WHSLr0aXYqiSvhleN/hFqRAfAb0bw0QF7P
      gNh8DuK1qFgDSCoZPE43B5q6EELkFQp5NV6nm2Rm56x8bAW9k0McuNoHSAlR8oS7JWBfbTW9
      wdwQVgilJAkzKtIAhBAomorDap+bB7Rvqgdw2hwIIK1UVqb7UnJm+C1OdCxPaJKbAFf+BtjV
      HG1qoC88P3STS+ISUZEGYAgDEFhkGYss87N3fpCDzd2bKqveW8NMsvIdwLYCRVMZm53i0FXP
      yshM7sD3PxxqqGNgZu63k2SMEuwFVKgBCIRgQQP042/78KZ3c1urGxkKjm9l9SqWsyMXaK9t
      WZYNUggj5068Ax0Cmzxu3HPuHJK0i3oAMdcDrCeCmy+377+B5/tOF1+pHcCpvjO869hdyw/q
      yZIHlpcKr8OO277oz1SKpdCKNICFHmALMk2+/dCtnLp8ZiHx2rWKIQRPXXyJ2/Zdv/x4dmpH
      bYBdjd1iQZkTaBZqZMuXQivyySiais1i3ZIewF/lRZZkwolrex4QScWwWawrgoaM7HRFKsDl
      S5PHzVg09+YXenrLh0EVaQApJY3Lsbmcs0IIjGwAPdmPEAJZlnn74dt48uK1rRV6qu9VTu49
      vuylIYRAZHe2M2Cdq4qBmTk/IEnekoTcS6lIA4imE/irNuf6aqQGUYPfR505hR59FSEM3n7o
      Vp699MoW17KyeOriS/zYsbctP2hkS+ZDUy6cVgtvTeeMWJJkjMzUlg6DKtIA4pkkHmdhQSxC
      CLT4BdSZ5wGQJAta/ALa7Itc33GIi5MDJK6xTTEhBLPJKKf6znButJcT7QeXf6/O7igP0NU4
      3FjPE/3DDM/mhj5CCbCVui4VaQCpbBq3Pf/gFyEERvIyWuSVZeNdSZLRE30YmXGO7+mhd2qo
      qHolMim+9tKj2+5gJ4TgrbE+fu7vfpef/cpv8503nuZzH/71FQnCKzEFUqG0+bx85r67+OVH
      v8/rE9MII7ulwr6ly0BcBNF0HJ8rfxEskZlAm31x1cmeJFnQo69x76Fb+d6bz3JT19GC62MY
      Bv/3uYf411d/QE9zF68NX+BPf+p3Ci5nK1A0lc8+8lcMBEb41H0f5W09J9c811CCO8oDdC1u
      3tPKXzzwTn7je0/ypfe9i73eYWRH45aUXZFPJ61k8o7+EnoWNfwMa/q6SBKGEubuzlZOXT5D
      Sik85c4L/a/x8uCb/OuvfIkv/qdPc2HiMkPBsYLLKRYhBH/z1D/jc3r450/82bqNPyeBfu24
      gh+or+UXTl7Pw29dwlACWzYPKNoAktEwL7x8GmEYjIyN0nfpIppRXOUSmRQeR35zAKHOIgxl
      3Z1OSbbh1wZ4z/G7+IdT/17ww3vq4kv85C3vweNwIUkSv/SOn+F/P/P1gsrYCvqmhvjBWy/w
      q/c/uELz82qMZH/FZIDfKu7Z28H3Lw+hZcNbJpte9BDI7a+jzj8NCAbPv0bXdfcULYsSTcdp
      r23J61ojE0AgbSz1oc/w0etP8JG//1/81M0P5K0zqukaL/a/zm+86+ML9bn/8B185ZmHGAlN
      0Fq9NV3xRiiayh9+64v8wfs/hU22bPBsBFrsPEKw4yfBS/HabVzf3MhLIyPcVX0F2bU5/7Cl
      FG0AqUSMcDhMLJGio+co8cAoeqMfaxGyKMlsGl+VJ69rVT2SW/ve0NdFxpM9z0dvvJkvPfVV
      /uADv5xXXS5ODdLsr8ftdC2EZFqtVn7u7g/zO9/8n9x78BbsVjtH2/Zzov1QwXHL+fL/XnyE
      /Y2d3Lrvug1DQ/X0KGgRZNm27nk7kQ8fO8TX37zAXfsvYvHuL3qOU7QBWK02jhw5hs1up6O9
      C2kLlqhSSjqvPABCiAIdvST+Y4+XD339UQZuf//aGdSX8Nibz/Ce43evaHTvu+7oemIAAA5W
      SURBVP4+vE4PgViYjJrlH0/9O4OhMVr8DWiGTjyd4HMf/nWOth3Is25rM5uM8rWXHuWhT35x
      w8YvhECPn0e6Bhs/wMm2Zv7oqVPMxCZo9E8gVa2eBDxfijYAu7MKu7MwvZ6NiGeSuPNKhCEQ
      aiT/pT5Jwmqx8lt33sDv/+uf89VP/Nm6Y2lDCF4eeIOfe9tPrPjOIsvcd+T2hc8ff9uHyWoK
      I+FJ7FYbvZODfOmJr/LlBz+bX93W4W+e+hofvf0D1Lg3zo4j1Jm5BBg71/1hPSyyzP379/Lk
      4Bgf8b+OvUgDqNhVIHc+IlhaArGJMLm7ujrpdqf56+/95brS21dC41TZnXkH5Dusdg40ddJZ
      18r9R+/kSni8aFWK4dAYL1w+w0/f9t4NzxXCQIu8TIX+rFvGjx/ax79f6MPIBnPpXougIp9U
      UsnkpQKXi3QqvBOTJInfuOtWvvvms5y7+NCaE8Unzr/AvYduLbj8+Xv8xM3v5l9f/f6mrgdQ
      dY0vPPYVfvX+B1dscl1NbuhzASMbuObFgPfX1iADo7EUWvT1oib6FWkAqWwaVx47wTmt+811
      9W67jc/dfw+/+52HycQvr/j+/Phlvvnq9/ngjfdvqnyAD9xwH989+3TB2SoDsTBfeOwr/Pif
      /yJV9iruP3rnhtcILYYePXPNDn2WIkkSP9bTnesFlAB64uKmy6pIA0hmU3jy6QGKVAs73tTA
      HZ2dfPHxLy8bCo3OTPJfv/55/uKnf68oXdE6Tw3H9vTw9KWX875GM3Q++U+foclfz7988i/5
      s5/6b1jk9X8mQ42hhZ/e8W4PhfDuA9080T+MQEaLnMbIbm6oWXFPbP5tabWsP7QRwija01GS
      JH7l9pt4YXiYs72PIYTBpclBPvlPn+HT7/8kR9ryz0ewFh9/24f5P898A0XLb67yfO9pGry1
      PHjnBzdMCWUos6jBH6JM/RuGurO9Pgul3u2iq8bPm1MBQCYy+UMuTgwUXE7F+QKpuo5tg8YP
      5Fx99STSJuYAS3FYrfzhfXfzu4/8A90vv8BkPM2n3/9Jbum+rqhy5znSup+buo7y2W/9FX/0
      oV9bd9VJNwy++MN/4vMf+c0NyzXUKGrgMcDYFcOe1fjA4R4eOneRRreLTz36AyLZh/jGp75M
      e11r3mVUXA+gaAp2q33D84QayWVR2AKONTXwy7ef5IEuH9/4mZ/k5r3HtqRcyPUy/+3HP4Eh
      DD737b9Z99wfnj9FW00zh1rW3+EUego1+H3g2tnl3Qx3723n9Ngkv/Dvj/Fbd93KH957M5/+
      xu+jpfP306q4HkDR1bx6AEMJb6nWzf379+bKTV9BnZrFWnMrkqNl440nQ8VIDeVC9YQBlios
      VV1g9S679rMf/DV++6Ev8MePfpnfeeA/Y7VYUDWVb7zyGOcn+mmvaebbZ5/iSx/7g7XvJQRC
      i6GFn0HomWt+tWcj7BYLv3P37XTXVtNdW40Qgu/0DvDws3/NT5x8Jxb/SWTb+sNISZRCcHGO
      aDSK359/alOAiUiA3/yX/8HX/sufr3mOEAIt9BRGdqLYKq51AwQGsqMZi2sfclU7yA4kSZpz
      pBOgJdBTQ+iJiwgjszAMWVC0sPqRHA3IjmZkRytYqlB1jc8+8lckMil+8z0/z2e/9Vc0+ep5
      94m7GZuZos5Tzf1H71y1YQs9jRZ9DT15GZB3feNfi1AyxccefpR79raTVlX2tZ7goyfvwOHp
      QrLVrXhuFWcAA4ER/uTRL/N3P//5Nc8Regpl4uGyrHoIoYMwkO31c/eTcuoERgYk64a+KLnr
      BbKzBYtrL5K9gb997lv844++y+++95f4Dze+c8M6GMoMauhJhJ42G34ejERiXA7P4LJZeW5o
      lEuhMH/27rtpaLwZS/XJZb9ZxQ2BUnmkQtKTA+QSaJYeSbKAtDJToSRvPE9ZvB5ENoCanQJh
      8HM9Eh898H6qXKDHzyNXdYLFvWrjNrLTqMEfIoRhNv486aj20VGdcxu5rb2N7/UN8rFvPs5n
      74tzc/cstrp7kSw5p8WKM4B4NrVuPHAu/LFv50U6SRISloV5i4NcyKKeGYfIaWR7A7K9AdAR
      hpbrYbQ4hhZHkswhz2aRJIkHDu7jQF0Nv/eDZ3lgOsSDNwawujqweI9VngFEU/F1FSGEEsBQ
      o9eGt6MkIc31Y0KdQV9Fw3/HGXqFcqC+ln/8iffyR0+f4me+8S2ONzWwx+eqPANIKek1HeGE
      EOiJS5vy/zExcdltfP5d9zIeS9AXnmEsEqs8A4jNJca4mpzv/wxGesQcDphsGkmS2OP3ssef
      G2VUnAGklAyNV7kfC0NDj55BS1wyhwQmW0rFtaarRbGEnkaZfsRs/CYloegWJYRBOp3Ojc91
      HV3XipKsWDoHEHoaJfAYQkuajd+kJBQ9BJoYHiCWUXD6GkCJk0ykOXzsKJt1UkhkknjsDvTU
      FbTIaYSeMsf8JiWjaANIa3Dw4H76ByaZGDxH13X3IpOTRVFVlWQyl+VPnvNpn9fplyQJWZbR
      57TfASwWCzVVPmrEKGpyFsnevMpml8RybcirP69GPuds5pqtqMturH+h15TqmUnFu0IExoYY
      D0ZobOtCy8TIJBPsPXAYu1XelCuEbugbij6ZmGwVFecLZGJSTsyZpcmuxjQAk12NaQAmuxrT
      AEx2NaYBmOxqFvYBEonEsjX5rSCVurZycplceywYgMeTf0qiQvD7/RiGgSzLOY/OudSlS49B
      bmOs2PPm/331ecDCv9crb63zrq7L1efNf7/ReVt9TAiBxWIp6T1WOzb/3Db6/0qStOz5Fnve
      Wv/fYn7La2ofQAixLW4Tu/G+QNnvXYr/b8W5QxfDdvkMmffdufe1fOYzn/nMlpc6Rzabxenc
      XMb31TB0hYsXzpM1LPg8LpR4gNf6Jmhrqlt5spblwqVepkJRtFSEweExfLV12CyFzfv1bJIL
      vZeZiSaIBCcYGpmisbkRWZLov3yZ2rpV7o1gZLCfoZExrDL09fdjWJx43fk9C0NJcf5SH+Fo
      ArIxhidmaayvITw1xuCVUbA5cVctz0RjZGLMpCVcDgtTY8MMDg4i2Rz09/WS0aDal98Q19BV
      3jrzI2y1nThkhed/9AqdHe2EJ69wcWCEVEajptq3wkcrEppmYHAQRZcYGeonHEtTX1dTkHBB
      cOIKA0NX0CQHPrvGi69dpqnayuk3L7OntWnF+aPD/QwOjeJyV3Hm7Ft07MlfEQ5yCRZ3VA+Q
      CI4ykxbIiQRQz8hkhBonJOMxzl+6hL3Kh0WN42vsoLO1kc49LVyZnCWl6Bze28T0bIKOpuqC
      7inbXbS3NDA9mySd0vFbkgQSglavRDKZZOBSH81tdQQiESaHZnDX+rjuWA+t7e0kevuZDEc5
      ceI6+vv7oSG/e0u2KjpaGpicTVPX2EIoNgKAMAw03aDKYvD8c89iddXgtSoouqDaZaU/YuW+
      W4/R2LKHeCxObDZI58HjBMYGgOb87i1baW2qRdVh7MoVqry5yClF09i7/xCh8UEGL53jykSA
      9vYukpk0Bw4cwl/XSDIZI5uM429qR42FMARYCrAAVVHQdQ1F1UGArigMhwUul5XRwUv0DkzT
      0d2MpskcPHCA1j3txBOXsTvd1PgKS6wOIFnsO2sZ1O7yUlNdg5ZNIYTObDhEIhJmMhSjvqkF
      qyxw++robGvCUBP0DU/T3dWOpiqEZ2M4HIUH0qupGYanYnR17KGtrYloRsLnlFCyGQwhIQyN
      WDSCqgtaO7rxVdlAQO/FXtq6uqm2SwTDYfQC3jVaepbByRhd7a1zDUJBNwROj599XXvou3QB
      ye6lrbkBp8tLQ40Xb3UNLU1NyBL0916ktrWLWm8Vs+EQqlbINE+gqrl7ZrIZwlPjhKNJEIJs
      JkVWNYgnknR1daOrGdra27FZZSau9GM4amhtriMejZDOqgXL1sQTGbq6OkjGckK/DQ21aLEJ
      7DJEYincVo2UbudQz34ssqD34iXaOvdit4CqKShqYTL0upLZWUMgq8OFRU9T29iKw2qhtrGZ
      9o4OrLrC+NQUBw4cxO/LJdczDEEmkyKt6HTtaSapWWiury74RzEMQTqVRNXBLgt8Da1Uu51E
      Z0PUNrVRX+sjkRG0NDXh8VThnbu/qmaIJVK0dXQSj0To6OxAznMMa+gGmXQSRRco6Tgg4fT4
      cFhhOjDLgcNH8TtlbFUeoqFJPPV7aGxsQk9H8Xi8GLpKLBajprEdkYnT0t6BNc+hn6FlCUez
      YGh0d++jra0Nv8eFw25nZmaGvd3dNDc2kEhn2dvdTSwcwuXxISOIx2LY3dV47ILqhhac9sIG
      GDU11QRDEbq6OrBY7Hi8PjxeD7W1tXjcVXjrm2lpqMNutSJJoKkK0VgSm1VCU3V0IeNx55+u
      S5KukVUgIQQC8m5g1xJLl/1MCmdHzQHWQpKkgt/s1wpm4y8O8+mZ7GpMAzApG8l4DM0QzMzM
      oGSSZNWVrjfxeHzFMSWdIBiOoGtZhoeGiKeyW1anHTUJNtnZ9L76NDFD5uF/expbNojsa6Dv
      4gWqa2u5fP5NDJub5555Ao/bg8/vZ3p0kMngLI8/8hAWXwvVcpgXzgUYvnSWhqYGzr35FhaR
      5Kvf+B7793dy4dxbeGrrcdjyD6k1DcCkbLgcgie+9wLdx/YxPZsiOnoJVVPofesCA4EEsUiU
      kfMvYGvoYW9bDT946hT1HU2k4xnedtcdaKkQoYybakuMtC4RmR5iIiZRVeUlO3aBgKoxG9Xp
      bGvIu07mEMikbLhr95AwNG7qasKQHRzY24lh93PiuqP4nFb27+/m0A13kJ2ZwBAWaj02YoEw
      Xq8XCZCtDqav9JGQvFgycey+GryeaqRMhOq2NiThpLszvw2/ea6JZVATk81i9gAmu5r/D2Qh
      JU4m6mxSAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Running Total Cases_W' width='192'>
      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
      A0gD7f8D9v3x+IDlOqkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Running Total Deaths_W' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29eZxcV3nn/b236ta+dFV1dVdX75t2WULyhm0svAQMxMkM8Alhn0kgw2RC
      gLzZGEIShgwEMBAILxk+vAmELQlbJpAABmNLeJUtybK1d6v3vau6a9/udt4/qiUbu9tSt6pb
      3er7/Xxa3aq699yn6p7fOec+5znPkYQQAguLTYp8tQ2wsLiarKoADMNYzeItLK4Yqwew2NRY
      ArDY1CxLAEIIJkaHSGWLTI+PcLpvENPQGBwcRDNM5mYmSKRyq2WrhUXNWZYA0lPDzGQrSBKM
      TYwTrY8wNjhAKFLH+YEBZuZKzE2Moq+SsRYWtca+nIPz2TwNTW2Mjw5z3Z59nD95BinoJ+73
      IU9NYHPUYzcFhhBIpolhGFheVov1jLSceQCtnOP0uUHq6qPo+Qy5iqCrtZ6h0Sni7d2kJocw
      FR9bezuRqHqBbDbbKppvYXFlLEsAy8USgMV6x/ICWWxqLAFYbGosAVhsaiwBWGxqLAFYbGos
      AVhsaiwBWGxqlicAIaiUSmi6ga6pVFQNIUyKxRJCCDS1gqpZgRAWG4dlhUIUUjMMzeaJNzUw
      MTSAakjE6n3kyhqKK0BubgYhO9izd5fVtVhsCJYlgOTULLqkMD4xjNtTTz1lEhXBji29DJw7
      hT/QjGJmUYVAsWKBLDYAyxJAtCVGYmASX6AOrZhkXLfR2VTHiWdOEIm1XowFapUkpIUQCCsU
      wmI9Y8UCWWxqrKG6xabGEoDFpsYSgMWmxhKAxabGEoDFpsYSgMWmxhKAxabGEoDFpmZZM8Hl
      3AzHz0zR0dVBYuw8Nm+YpqCDkakE0Xg78wszwdft3Iq0WhZbWNSQZQnANCTcLjuFQhGn00Eu
      nyeJm117djFw7jQeXwuKmaVixQJZbBCWJQAhKUSjYebm00QCYYr5GewON6PDo8jOMIXMNEKy
      0SJJyFYskMUGYFmxQMI0SKXS+OtCaKUChmTD53GRyWQJBINUigWEzYHH5QCsWCCL9Y8VDGex
      qbG8QBabGksAFpsaSwAWmxpLABabGksAFpsaSwAWmxpLABabmmXNBKulNCfPjBJva6OSmSGv
      2+mM1XF+ZIKWjp5qLJDDT29XmxULZLEhWJ4ACjkMCYRQqRhOgpLK0Owc23duY/B8HzZ7GIee
      RxUCuxULZLEBWJYAFE+YvbtjnDl9GrvNRQkDxSFTKpUQkgNNK2GYOjZJujgDbM0EW6xnlhTA
      iSOP0D86S9f2vezd3gWAbJMYGhigo2cbRmGevG4nXu9ncHiczs5uMokJTEdkeaqysLiKLBkL
      9OihB4jG26kLN9AQCa6ocCsWyGK9s6QXqCXeyMkTpyip2lraY2GxpiwpgNHxSbZt6WR0ZGwt
      7bGwWFOWFEA4GGRkbJxwfXQt7bGwWFMWFcDgmaeZTedJp7OUyqW1tsnCYs1YVAAOh5OKqhMK
      hfC4nWttk4XFmrGox9IwdCqVCgC6bq6pQRYWa8miAqiPtbLPHQLAFwytqUEWFmvJokOg6fEh
      zp09zaFDh+gfmfyl97RKibKqk8+mmU3OI4RJaj6FKQTFQo5iubImhltY1IJFe4Dk1Dhnzk/T
      09lByO+7+LoQJgNnj2F4e9GyozQ0dzA1PEBFtpPM5Chl0iDL7LrO2iTPYv1TyWYWF8BNd91L
      784x/v1HP8Fb30xvRxyAqcGzZMqCSmWeLc0NjA0M4q8P0dPbwsC503h9MWuTPIuNgRA89YXP
      Ly6Aww/+Gz959DQ7d+2iIfxcGESsYyvRphTDswb53DwoCvV1bk4+c4povJ3U5CAFa5M8iw3A
      xOOPUZ6bWzwWSK2UKJVVABxON+6FRFfLxYoFsliPqIUCD7z/vdz2Fx9ZYh7A6WZsdAR/ILDi
      ym9hsV458Y9foeOuuwm0tC79rJqZGuDr3/oXjp8ZXEvbLCxWlbmzZ0icPMHW178ReIn1AMH6
      GN1BOx4ruN/iGkGvVDj8mfu4+Y//FJujOrJZsgfI5fOcOvYoE8nsmhloYbGanP3ut4ntv55Q
      d8/F1xZt3yuFDLrk4g1vfheRoHfNDLSwWC0yI8OMHHyQV3/+i0jScykbFu0Bnjl+nN4tnfT1
      9f/SwRYWGxFT13nqc59l/3//Pexu9y+9t2gP4HHKPPTgw5RKRRweH9fv6l0TQy0sao0QgvP/
      8e/44s00vmzfi95fck1wpVxGU0ugePG5rXkAi41JYWaGn//RH3DPF/8PDp//Re8v6eN5+ukj
      pJIJvOFmbr/1xuqLQjBw+klUTxciO0Zet9EZr2N8Zp5IYyupySFMxcve63ZYibEsrjqmYXDk
      bz/Hy37nPYtWfngJATSE/IQaWvC4nhszZeemUXwhymoRhztKK2Wmciq79+xm4NwpfME2a5M8
      i3XD2KGDSHY7TTfdjK7rix6zpADGRkdIFU26tu+hdeE1Idso5TMk817CzjIZQyYe9dN3tg+n
      N0ouMY6wOa1N8iyuOuV0mpNf+yp33vcZ7Iqy5HGLCmD47HH6R2YIRSKY5nMteDDcQDBUT48J
      CANDSCh2G+FKBafTiR6rB9lmhUJbXFWEEBz9wufZ8aY34402vOSxiwqgfeseXu0N0dLSyvj4
      xC+/KclUG3WZC227y+UCQHFYcUMWV5+pI09RzmTouuc1lzx2UQGU0tP84Ac/pLWtje7tL3Yd
      WVisV9R8nqe/9EVu/8hfIcmXHosseoQn1MRNe3cwn5hiLpWuuZEWFqvFM3//ZTrvfjX+5pbL
      On5Jidi9IaIhP6ZmrfG12BgkTp4gdb6fra9/w2Wfs6QXqDUWxu2/hWg4XBPjLCxWE9MweOpz
      n+Xlf/qhi5Gel8OSPcDpviESk+c5ffpMTQy0sFhNZp4+Rsstt1HX1bWs8xYVgBCCqN9J38Ak
      XVu318RAC4vVIjcxwdNf+jt2vf0dyw7eXFQA/c8+yVRBYldvG+OTMzUx0sJiNdAKBR772Ed5
      2Xt+F9m+/NVbi56RmEtSLEERkMtTQDUatJxPMzAygccfRs0lMBQfbVEfA6NTxNu7mZ8cxFT8
      bOvttGKBLFYdYZo8+Tefof3Ou4nt27+iMhYVwA233km5Ut0YQ3G6Lr7u9PhRZBPNMNB0FRON
      2WSGHbu3M9h3DpsjitO0NsmzWBv6vvddBNB9769hGMaKylhUAJm5WYYnZgFoaG6nPV6dTlYr
      FTq6t3Dy1Gm6OrcyMzyI6nCSz+UxZTeGmkczVezWJnkWq8zU0SOMHjrI3Z/9HPYriEBYVAAO
      lwf0Ev1D4+CquygAmwwDg0P0bN2Bmk3gjTXTHA0yPDJOb3c32bkpTCWGVeUtVpPc5ARHv/B5
      Xvmxv8buvLL0/UsuiHn40M8pFLIEop3ccsPeFRVuLYixqDVGpcLPPvD77P3tdxPbf/0Vl7fk
      PMDW7btpijZQH2284otYWNQCYZoc/vSnaL/jzppUflhCAFopy8MPH8Lu9jE9ObHYIRYWa87Z
      730HIQTb3vgbNStz8R5Akgl6HBx5+hRbd1gTYRZXn6mjRxg9eJAbP/D/1DRTyaICUFw+FLeX
      191zB+dOnarZxSwsVkJhdpajX/gct3zowygeT03LXlQApmnSFmvgqSPHae3qrukFLSyWg14q
      8fBffpjr3/t+/PF4zctffH+Ah3+GiguPx4OuWuHQFleHcjrF4fs+xfbf+M1Fc/rUgsUTYwUj
      XNdbHfvbFWuZo8XaIoQgcfIEhz/9KXa+5W20v/KOVbvWkvMAi1EpZhkYHifcEIdymrxup60x
      yPnBMdq6ekhNj2I6/LQ3V12n1jyAxXIxNY0TX/9Hpo8d5ZYP/hn+5uZVvd6SAhBCYJTznBqc
      ZM/OrVXjDJ35uVkSqRyysONEo2yTaG9rZWR4BFnyYjNLtG3dgk0ITNNEvox1mRYWALnxcZ78
      7H2EenrZ89vvXtbClpWyZPzoiaceYSqVp6Ft63MvShKmkDBNHVlSkJAQgCxLgIAXuKesQDiL
      y0GYJiMHH+LUN7/O/v/+P2jcf/2aJWVeUgACgV1xYrc914KXcxkScylCkSYkNUNec9Mdq6Pv
      3CDtXb2kpocxXQEUSQJJQghh9QAWL4lWKPDU5z5LJZfl7vs+izsSWdPrLzkEGjhznGdPn6d9
      +8vYt2NlrlDrGcBiKYQQJE+f4vB9n6T3136dLb/+ny8rjUmtWbIHSGSK1AVdlLKZtbTHYhNg
      6jpnvvNtRg89xK0f/gtCV3GuadEewDQM8oUCqcQU7nAzDSHfYudeEqsHsHg+lWyGxMmTnPve
      dwl2dLDnXb+D8oINK9aaRXuApw79iMdOjtDa2saeff4VC8Bi8yKEoJxKMX/uLFPHjpA4cQJT
      14nu2MnOt72dxr0vWxe7Dy3eA5gGickRHnzwIPHtN3Hghp0rKtzqATYPwjSp5LIkT59i+thR
      kqdOYeo6ka3biO2/nuiu3bjD4asyzn8pFu0BnnjgX/np4X62bdtCKGBtkmfxYvRKhezIMHPn
      zpE8fYrU+X4AItt3ENu3nx1vejOe+uhVtvLSLNEDmBd9+JIkrdiVafUAGx8hBFqhQG58jLlz
      Z0n195MaHMCoVAi0tRPu7SWybTvhLVtRPJ5118JfikUF8MyxJ8kUSmzftgOXx4ffu7IHFUsA
      Gw8hBFo+z/TTx5g8/DipwUEwTbxNTdQvVPS6zi4cgcDFTVA2KnohtbgASrkUBw8dJJkucdud
      v0JnvNqVCWEyNjxIONZGMT3DfEFna1cro6MTNLe1kZubwXT4L+4tbAlg41BMJhn7xUEmDh+m
      nJonsnUbbQdeSV1XN+5rMD+sOj/GzEP/79ITYQd//hM6OrsYmcpy4Nbq+styIYuGneHBYdRy
      lo7eHRQSk3jr60kkMxiqgSQ0tu7aiQ1LAOsZ0zBIDwww+ouDTB89gqwoNF1/A62vOECwo2Nd
      eGhWi+L4Ceaf/BbRA+9ZeiKsqT7CmXPn6dz+souvOZxOBs/20dGzFVkvM3C2HyUYIB4MkpyZ
      wumsRzHz6EKAlRhr3SGEYO7sGc7/8Aek+/vwt7YSv+lmbvnzj+Cpr78Yy7XSJFPrHmGS6/sF
      xYFHqL/zfdh89csLh56bGGQoWaSpsYFyZo5syaCrLcrw2DRNbV0XUyNu39KFhNUDrBeEEJTm
      5jj2d1+gMD3Nzre+nYY9e3F4N4+Hz1SLJB/9KgD1t/5XZEf1uXZJATzxi58yl9fp6N3Jzt72
      FV3UEsDVRysVOf3P/8TIgz9n77t+h7YDr7zaJq0pQggqM30kH/0KgV33ENj6yl96f8khUKVc
      ASvH24bFNHRGHnyQk9/8Oh133c1rv/wP2F2uS594DSEMnczJH1McfZqGu34fR92L1xQvKQCb
      082Wrg7qwnWraqRFbbkwzj/yhc8TaGnlrk99Gs8ltgq91hBCYBTmSTz8ZZRgE7HX/AmyffEU
      iksKIFIXYHBggDbJSTQcXDVjLWpHYWaGY1/6IpV0mhvf9wHCW7Ze+qRrDCEExbHjpI58m/AN
      v4mndc9LHr+kAFwuD35fmenpWbZ3ty51mMU6QCuVOP1P32Ti8BPsfPNbaX3F7Rt+kmolmFqZ
      1JHvoKYnib3qD7H7Lr24ZkkBZNJzTE8nadvaVFMjLWqLoao88tG/JNzTy6989vM1Txy1ERBC
      YJQyzDzwObwd+4nd+JtINuWyzl1UAAN9Z9mx70YGR/4V+2UWZLH2CNPk6Bf/llBXN3t+611X
      25w1RwiBlhonc+p+1PkxIje/DVdj77LKWFQA2dQsD5w6we7bXkVydAjoqIG5FrVECMG573+X
      SibL9b/3vqttzpoiTINKYoDMqZ+iF+ao2/1a6m/9L0jy8vcIWzwaVFeZncvQUF9HsWLg81Td
      Z0IIdF3DZlNAmJiATZbRdR273Y5pGCDJ2BYW0lvzAKvH+GOPcuqb3+DO+z5z1VdVrRXCNChN
      nCL9zL9hc/kJ7HwVrtg2JGnlEaiLSka2O8jMDHPsaALJ7uL2A7fjddqpFDKMTM6i6gIqeUqG
      TGtDgGS2iDdYT2ZmHGF3s3fvrqU3HrC4YlLnz3P8y1/ijk/etykqv6mr5AceI3fuEEqggcjL
      34EzsrLJ2ReyZJ8xk8py883Xc+zJI5w5e57r92zD6Q2gMEVdY5jsnId6yiTKJjt2bmfg3CkC
      dW0oZhZVCBQrFmhVKM3N8ejH/hc3/ckHcYbC6Lp+tU1aNUytRP7cQYoDj+GK7yRy4D3YvVXP
      Tq0+95IC2NrZzuHDR9m28zqCwWo47NxYPxPpEl0BGbU4y5huoyNex4lnThBuaCY1OYypeGmV
      JCRrk7yaoxWLPPZXH2HPb72b6LZrd98GU6uQ6/sF+fMP4+28kabX/ik29+rMRS0ZC3Topz8g
      p8p0bN3NLisW6KpjGgaPffyvCPf0sv1Nb74mw5WFqZM7d4jMqfvxtO2jbvdrsbkDq3rNJXsA
      0zCoqDq6fo2Gxm4ghBA8+5W/R/F4r8nKL0yD4thx0sd/gKuxl6bXfBC7N7Qm115UAINnngan
      HzWdQL9WY8M3CEIIhn56P3PnznLgox+7piq/ME1KEydJP/tDlEADDXf8D+z+6Jp+xkUF0LX9
      ZRjGUXL5Ig7Fmgi7miROnuDsd7/Nnfd99pqK5ixNnSF17PvIiovIzW+rmVdnuSw5BJrLFrjh
      hhvx+ld3DGaxNLnJCQ5/+lMc+KuP4wpeGwGJWnaG+af+BWHqRG56C47I1V1+uaQAgl4Xzzxz
      nLbenezwbb74kqtNJZfl4b/4MDf8/vsJtLRcbXOuGCFMcucOkT39M8I3vAl3y+4rmsC6YntM
      E0MtLS2A2ZkZhLCD5cdfc0xd54lPfJwt/+n1xPbtv9rmXDFGOcfc418HBE2v+5/YnGufatM0
      dIpTQ6T7jlGcGqSSTiDblJfYH8A0KJY0VO3anWhZjwghOPmNr+FpaKT7ta+72uZcEUIISuPP
      MPfkP1O351583bes2XBHCEElNUtu+BSZ/qcpJcZxR1sI9uwlsvtWXJEmkOSlBVAXCjFfSKBZ
      btA1ZezhXzB74gR3fPwTG9rjY2oVUke/g5qaIPaqP0Dxr+6qtOqWXkUKE+dJ9x0lP96PbFcI
      dF1H7NZ78TS2IysvXhW2pABaOnrwR2JMJp7bH0Ar5Xn86ZPc9vKbOP3sMWR3iHjIyfBEgobm
      DlKTgxiKj907trBxb93VIzMyzImvfZU7/vpTa7I/1moghEBNjZF8+O/xdlxP7IbfRLItP0pz
      OdfTcvNMP/4fZAeexdvcTbB3H/HbX4/iu/Ry3kUtE8JgcnwCQ7YTa3puQYzi9tEYCSIEKHY7
      xWKRJAa79uxk4NwZXN5mFDNLxYoFWjZqLscjH/0I+9/3ARx1dRsyxkeYBvnT91MYOkz41nfh
      CLdiCGA1PosQFCYHmH3831Gz80T23cm2u97yS4dczne4qACOH36EVFHl3LlBDrz63ucK1Crk
      8wUKxQLBUCOVyUkku4PJiSkkR5BiLgESNEvSxRAIKxTi0pi6zpHPfpptb3gjjbt2b7ihjxAC
      PZ9k7rGvoQQbib/uzy7m3ak1plYh3XeM6Sf+A8Xtp+HGewh07roYe7ZcFhVAqZhjZiZHsZij
      WCw8d3HDoKkpjqYZ+LxOnFu2UOdzk5xL0RyPUM5nEHaXlUxlGQghOPnNr+MKheh+zcZ66BVC
      oKUnyZy6n0pigPD1v4G75bqaC1gIgamWmX3qpySPH8TXtpWO170LT6zjisteVma45WIFw12a
      sUd+wbnvf29DjfuFoVOaPkvmxI9AmPi33Ym3fT+SXPt7XU7NMP3oD8mNnCGy+1ai++9G8dZu
      cnb1nk4sLkl2dJTj/9+Xueu+z2yIym+qRfKDh8mefRBHqIXQy/4TzoaeVZnQ0stFxn/+LUqz
      Y0T33UXbq9+BrNT+O7J6gKuEWijwwPvfy41/8IfUb99xtc1ZkgtJprJnH6Q4chRv5434em9H
      8dev2vVyQ6cY+fFXqN97gMabXoNsX714NEsAK0CYBqZWxlRLmFoRoavLnjE/+c2v44lG6XrV
      Patk5ZVj6mXyfQ+jZabwb7sDX/fLkZXVW4Kp5TOM//xbVFKztP/qu3HXvziVYa2oPrhPWwJY
      DCFMCoOHqSQGMCp5zHIe09AQegVh6AhTR1ZcyA4PsuJGsjtZzsTH+KOPEOruwRuLrd6HqAGS
      TcHXeROu2NZVGd9fQJgGqTNPMnHwO8Re/qvU7zmwYq/O5VxLSw1RGnsSYVSsZ4AXIoRJ+ul/
      Q50fxb/1lcguHzanD8nmQLI7kGxK9WcFng4hBBNPPM7czAmu+8AfX1PhzStBCIFeyDDyo39A
      GDpb3vpBnHW13VhPCIHQSqjz51HnBzHyM9g8UTydt2MPNFsCeD5CCFJHv4+WnqDhjt+97Oxi
      l0t6cJDjX/o77vrM31iV3zSZP/koE4e+R/z21xO57hU1c58KQ0PLjKHO9aOlx0AIlFA7rth1
      KMEWJNtzD9PWEGgBIUzmn/o2em6W6IH3INtr63EozM5w6EMfXPcPvWtBeX6a0R9/FZvLS/tr
      /yt29/KjQ4UwEYaKuDA01Ypo6RHU1DBCK2H3NaJEunGEOpEU95KeqmUJQAhBIpEgGo2SmZul
      oNtoqvczNDxOa0cnmeQkQvHTEKku3tgoAhCmSerod9DySaKveHfNK79WKPDQn/4R29/0Zlpv
      e0VNy95IGJUSiaMPkDj2IK2vejvB3r2LVkwhTIRewSgk0POzmGoBoRUw1QKmVkIYFYShIsnK
      wtDUiax4sPkbcYS7sbnDl/3MsqwhkF4p0Dc4RKQ+xMRMGgc6A7kkDbEYA4MDCENGNjOEI8EN
      M7YSQjB/5Nvo+SQNB/5bzYc9hqbx6Mc+Svudd23ayi+EyfzJx5k4+G1C225gx7s/hs35nDfJ
      VPPouRn0/Ax6dhK9mESSbdi8UezeKDZ3HXKwGdnhrbbmdheSzVmTIdOy6qni8hENBQATh+LC
      jUoG8Hg8yKKCTQljN00MIZA2QjCcEMwf+RckQyV8629jCKmmgVvCNDn2xb/FF2+m+1d/bUMG
      uF0ZgvxYH+M//QaexlZ63/Zn2L1+KqlhtMw4Rn4aUckg2x3YfTHsgSZcbTcjuSMLeT5fXMHF
      wg81StawLAGUcmnm51OMTaZQ5BJp3U5nrI7TJ8/S0tHN/OQQFYcfxwZIjHVh2CMZKvUvf0fN
      Q3aFEJz5/neppFLc9uG/RLZvlD7xyhFCUJmfZvyBb6EXc3T+6rvwxNqpzJ4k3/8k9mALzkAL
      9ua9yE5fzVrzlbApH4KFEMwf/iamrlJ/yztXxcc9euggZ7//Xe74+Cc3Vc5+rZBl+rEfkh18
      lvjtb6Buyz4qs6cojj6OUteGp/02bK61S7QghEAYKqZewdTLmHq5+uBsGghT33wCEEIw98Q3
      AEHkprchybWPY0mePs3jn/w4v/I3n8dVtzYJnq42pqaSPH6Q2afuJ7LnAI03vgo12Udx5BGU
      QDOerlciOwOr0tIL08DQShiV7PMqegVhGiBMJFlBtjurk5d2J7LNAbINSbZvLgEIQyf52FeR
      bA4iN791VVr+3MQEhz78P3nFX/wvgu1XJ9fNWiAMAzWfIj9yluzQSfLj/fg7ttN84I2YxUmK
      w49g8zXgab8Nu7d2cUNV96eGXslhVHIY5SymoSErLuyuYLWC26sVXZJtINleUnSbSgBzj38D
      YWpEbnnnqkQwVnJZfvb+93LD73+Axj17a17+1UQIQSU9S37kDNnBkxSnh7C5vPjbt+Pv3IU3
      1oFZmqUwdBCbO4yn4xU1qfhCmBhqAb2UrlZ4tYAk27E5/dhdAWxOf7Wyr/B+bpons/JMP2pq
      jNg9f7w64buVCoc+9EF2veXtNFz30jsTbgRMTaU8P01u5Ay54VOUZsewewIEOncQ3Xcn3uYe
      JHs1JETLTpI/93+RFQ/+7b+OzRO54qGOaahU0mNohTlsTj82lx9nXSs2hxeQajaU2hQCqIY4
      fJfQ/jeuyrDH1HWe/MyniN94E+133rWhljQK08SolKikZihMDlKY6Kc8P41ezOEKx/A299B4
      8+vwNLb9ku8ewNQrFIZ+gZYexdtzN0pd2xV/diFM1PwslfQYzkAcf+v1q5pAa1MIoDj8FDZv
      GGdDT83LFkLw7D9+BVlR2PmWt63byn9hpGuUixRnhilMDFCaGaE4O4YkSThDjXjjXYR23Iy7
      oRWHP7ykg0AIgZrsozDwAK74Pur2veOKJxCFEBiVLKW5QWyKB198L/IabNB4zQvA1Cuknv6/
      xF79h6uyVrXvX79Pqr+P2z/6sVXxKK0EU9dRs0nKc1OUExOU5yYpJSYwKkUkWcbd0IansZ3o
      9b+Cp7EDm/PyA/OMcpb8uR+BBME9b8XmvnTqkUvbW6Y0P4ypl/HU965p5rgVC6BUyFPWTeoC
      PvL5Al6fD61cQtgUXI71k1E6e+p+vJ03YvPU1h0phGD00EFGDj7EKz/219iuQhZtU1fRcmlK
      s2MUJgcoJcbRcin0chGHP4Qz3IirvpnQjpuJN7Rgd3mrId0rCeU2NEoTRylPHsPbdQeO6NYr
      HpoI06CSmUArJHAGm1F8jWveg65YAH1954jEWimnZsnrJtKch0IqiZDtXLdnfWySpxdT5Aee
      IH7vn9f8i5195jgnv/E17vzkp3H4VrfFEkKAMFGz8xQmBihMnqcwOYianUPxBvHEOvDGuwj2
      vgxHsB7FF6zZuFkIgZ6bJN93P4q/ibr9v4WsXFkotxACvThPOTWC3RPCF9+zoi1Oa8GKrxoJ
      1zE+OERdNExPbycD507j8zetq03y5p78Nv6d92BKdswaxuGkzvdz+DP3ceBjn0AJBGoe4yMM
      nUo6QXF6mOLkIKXpIbRcCsUbwBPvwh3rJLT7dpzh2KLDLsMwAfOK7TC1EqWhg5jFBO7uu7H7
      45iw4u9SGBp6OYtemEGSbTgjvciKm6q5VydOaoUCMCiXVGRFIRxwcfKZk9Q3tYipnXMAAA3Q
      SURBVDE/OYSp+NbFJnmV5DBGIUmg99aaen6y42M8+alPcNuH/5LgFaYtF6aJXsqhZpIUpoYo
      TAxQmZtCL+VxBCK4os34W3qI3fgqHIHwiocvl22PEJhqDj09RmX2NHp+FnfLDbi2vXZF36Ew
      dAw1j1acRy9XU2zanH7c4XZsqzQrvFyuyYkwIUymf/wJQvvfgKtxS83KLaXmeehP/oh97/nd
      y05bfmH4YuoaWm6ecnKqOl6fHaM8N4lks+MMx/DEOvA19+AMx1D8IeRVzKf5y/aZGMV51GQf
      6lw/plbCEenBWb8Fu7/psr071WokMNUiWimFXkphGho2hwfFHcburqvG7q+DSv98rkkvUHHk
      GDZ3EGdDb83K1IpFDn3og+x++zsXrfzCMFBz86jZeSqpGSrzU1RSs1RSsxhqGYSJ4g/jisTx
      NLZRt+0G3PXNq5Lr5lJUlwyOU5k9jZYZQ3Z4cUR6qpNYS3h1qiEIOsLUEIaGeeG3XkGYOqau
      YmolZMWJ4g7jjvRUEwasswr/Qq65HsDUKkz96H/TcOd7Ufy1WWCtl8s8/JE/p+WWW+m999er
      r5Xy5EbPkuk/TmHiPKauYvf4cQbrcdQ14Io04QrHcIYasDnd1YX0NXaTXoiLqWarqCD0MkKv
      VFdNaaWFKMgSQisjFgLEMHVMrYg9EMcR6UEJtoHNfrEym3rlYvSkMDSEMKpBZbDwGexIsh3Z
      5kCyOZDtjoVgMwey3Q1S7WZp14JrTgDpZ/8DUy0Qvv43alKeqes88am/xtsYY8u9ryE3fJL5
      00+iF3N4452Ett+EN96F3ROoaQUXwgRDx9RLmOVMNdKxnMGs5Ko/ah5TLTwvW4UTye5e+NuB
      ZK96aoQkw8KPABAmyPbqkEWSkKSFqMiFyizbnQt/O5FlpRo1uXD+RqrYl8s1NQTSi2nyA48R
      f92HalKeoZY5+89/T2HoCYLhnQz/cIy6rftpf81/wRVtqWmFEMLEKCTR0sNo6TGMQhIASXEj
      O/3YXEFkZwAl3FBN0+LwgWzHUAsY5QyGWqjmLgIEolqxbQ7kC6207XmV+2Jql/XgrL66XDM9
      gBCC5KP/gKuhF/+W21dcjqmpZIdPkTjyAMkTRwh07aTp5rsJ9OytDmVqUOmruWqK6IUE2sLy
      QLOcweatRwk0o9S1Yfc1wvMeGoVpYOpl9HIGvZzBUItIkoTNGcDursOmeKqL+SWZWgaLXetc
      Mz2AlhpDTU1Q//J3LvtcIQRaPs3cs48w98wh7P568nM6RS3O9W/5wxWt6Lrg/RGmjlnJYZRS
      mKUUeiGBnp8GU8fui6HUteGM7cLmDF70uAghqueVM2gLYcCmXqnGvDsDOANxZMWzJrEy1zrX
      RA8gTIPpn36auj334m7avozzTPLjfcwe/gnz556hlJMpzGsISSG2bz+73v5OHF7vS5yvI3QV
      YVQwSmmMcgqjmMIspzBKaYSpIUkyssOHzR1GdoewecIo/jjyQrxLdTVTEVMtYqh5DLWIqVeQ
      JBmb04vNGcTu8i94VKwhS625JnqA4thxZMWFK7btso7XClnmTz5C4sjPmO/vJz+vguQgumMr
      Pa+9gUBzFKGXKQ/9hJJeQZjaxda8+tsEoVcfKhceImVXsDpOd9XhCLZgc9XB88bZQpgXf6vF
      JEZ6ZMGFaCIrLmwOHzZXEEcgjmx3Yg1j1oaa9QBCGJw4/jSm4mPPrm1IrLwHuDCpgmlcXNdp
      amXMSqGarFYtYlYK1VaznKM4eozogfegBBqqbkC1gNCKmFo1kZKp5hFaCVMtYFQKlJPjCF2t
      Tjg5fNg9/oVEt14kh7eaf8buujieFsJECAPT0DB1DVNXEcJ8zoMi2wAJnldhq5V3ocWWWCgL
      JMlWHa87PMg253PZKF5wG6oiE9XraSpGpYxRKWGUS5iail4qYqjl6nvl6m9haJiGgdD16jOD
      WhWYqWsIw3jOl38Zt1xo2rLv20akZgIwjSxDQyUUM0tDbw+KaaKqKqZZbfnkBRfhhf9LkoQs
      yxjPy+9is9kwzWpLWzn1rWomMLWEqZURxkvEikg2ZIdvoULoVOuOVP25+LcMsh13YwuyJwiS
      gt3pQLIrCF0HRLUSCbFQGSX0QgEtn6OSTqPnC6i5LFouh6lpSJINVhryJ1385+L/X9TaSxIg
      IdnsyIoDSXEgOZxIihO701n92+5EdjiwuzzYHE6ELCPbbMh2BZtdAbsdJLn6f8VRvaRcXSN7
      4efC/bhwj8yFzy/ZlSXumbQQa3ThnsmYprgoqqXOMQ2TCxXNJsvVsIsL5yzYYlw4B5Bt8rLO
      eeHXe7nn12wIJElu8rkBhKzQIknINhsOh2PFPYDnxt953gsrNepSF1o45mrn7nqhIJ7/ljUM
      WlVq+hBcKRcR8nPrAdbbongLixdyTXiBLCxWiuVXs9jUWAKw2NRYArDY1FgCsNjUWAKw2NSs
      aiiEucgkhYXFemJV3aAvZDluUdM0L84q1urY5ZS5HmyVLnN11Qtn22tZbq0/F6zOdytEdTb6
      Use+8POvqQCEEBtmZnOj2QobZ9Z4PX23ayoAC4v1xqo+AxjlLE89ew6vL8jO7b3Il6H6fGoG
      w1VP0P3iLtI0dM73naNs2IgGncwk03Ru2c7w2eO0bb+e1Hgf2aLGtp27cSlLd4Xj509h+Jtp
      b/zlDAiGWqKsaiSyZTriYfpO91EwJOIhD1PJFO3dXUyPjmHYnASdkEzn2X7dHly22rdms5Mj
      ZCo2ejsvJ/eQQTKRoT4appidZ2hsErc/gpZLUJFctDcGGZuaIRhuIpucQHYH2dbbeclQqZei
      /+wJVB3CsTaa6oOXdc7E5CTN8fii783PTjI5myBUH2d+ZgKHL0SdC2bnUsSamhkfnyAYaaSr
      rekKrH6OSiHNif6J1RWAMHXCsVbCIk//4ABTY6PEW1rJpAs0N0c5f7Yfb6QRqZwiX9ZxO93E
      Y3VMDM8Q8AfIzoyQF27idU7svgjd7c20tbZwfnSGXElnz54ezg/M09QQRjMExYpOwCUzm8rT
      1rD0PlQFwwbpWQay01QqZTy+CBNT43Q2hTGcIYolFbDR1t5C/8gUmZLKnu2dnJ8p0doSY3Qm
      Q0k32NPTwOBsgZ6mWqdGFKRzZQQwN3YWM7KN+bFTVAoV0qUKzZEIsdYos5MzDIzPsWtHB888
      fZaXv+I2/P4QDaE8RVHBUMKEKaGEGwjls6haDn+4FaM4j8GVtX46dnbs3EZf31km+p4hrTvo
      agqgCheSnmV8IkFbRzOZXAm1IgjU1aEVkoyPTtAcj3B+YJjW3k4m+6bZ+/L9hKIxCvks5XyW
      SLyLUmqGSKyTfCHP/FSSrl27mR0arNH3CzPTs3ic9tV3g2qqSjJXQpTyNDR34HeY+CJx3LKO
      4gsTi0aoizbSEI3S0dqEiUS8uQVTL6PqNjpam3C6/XS3tyAMlbPnR+ju7kDoKsnpBIrPi65p
      aJpOSzxGrljG7106d6VeSDCTzJFMJKlgp7WlCV1TibV0Uud1PheWb2qc7Rumu6sDoWsk5lLI
      qAyMzNLd0YquVphOpPH5nDX/zky9TGI2QWouSaakUcylKZbK2NwB/B4npqGTTadRJRcdLRGy
      RY14UxNel0J6Zoy0Zife2ESlnCVbqZAcOY/pDBGP1pPPpylW1Cu+8cI0KORSmLKdii7T2daM
      qpu0xBvJ5Ut0dXfhsCt09/TS0NiEx2HDGwwT9rpIZ7LEWjsIep00d/TidzsYH+zH5mugqaGO
      bCZFSdUY7j9HINpKU4OX5GwSVa+RV1EIZpMJjEpmdZ8BhKEzOjZKXX0TAY/C+PgE0Vgz+dQs
      Ln+EYiaJwxfCpcgI08RutyFMg8mZBPGWVsrZeYq6TJ3fg9PlQhgqo8NjSA43zbEw04kMsfog
      Y+MTyA4PdR47FaHQEFk6ZbdaKiG7XKBV6B8YxOML0hqPoeoGimyiCxuGaeJRZIZGxsDupD1e
      z9Rsisb6ICNjkzjcfmJhL8lMiabG2u1/dQFTr6CadhTZQNMNEok5QpEQw2dPMJUzuf3G60jM
      56iPhEjMztDQ1EIhncDpj4CaZzoxTyAUxSVraJITm1EimcoSjjaBmsPmDhJ4iUbicsimEqTy
      Gm0tcfKZOfIqROs8TCezNIR9TCXSxBrC2GwKum4AgkIuhSG7idb5GJ+YIBprAlPC5VJIJ2eY
      y+Spb4xjlDI4vCFK2STZQoVYcyuF1Cz+SCNuRw0GLcKkWFJxu52b+yF4Oa67q4+oJuGVZOxW
      hG3N2NQCsLDYKM2fhcWqYAnAYp0hmJ2ewQTmE7NUNGPJI3O53IvPFibTk1MYQGJ6gqnZuZdc
      8XpNpEWxuJYw+P4//h9e9a4/4sdf+hwH3vk+zOQYTZ1byMyMkVMl9JlzTNpaUJMD9HRvYcd1
      e5D1Aqf6JwjI8/zgoSF+9/feykMPHWRHbyujM634zRSuUCOPPPAjbnrlPTiNHIYzZAnAYv3R
      tm0nQ0/9DG+0i8Hjj9C+6xU88tD9qKqEwymzo6kOV3MPZxKDKKUkg8kCY0cepL3Bx6Rws/f6
      G3AADpebrTt2cf+hpyjaZQaOnyMaqqc76uDL//Qk9dF6awhksf4I1sfJZcvs2dVNa2cP433P
      UN/UQaS+nmAgQDgWY2LgPKFIBK/Pj8Mu09vZyuBsiZbGEF7Pwp4LWolHHnuS63ZvJ5mrEI2E
      aY7W0T+do6k+QE9vr+UFstjcWD2Axabm/weqy9RjAobb5AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top10_cases(pm)_W' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top10_deaths(pm)_W' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total_cases(pm)_W_map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total_deaths(pm)_W_map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
